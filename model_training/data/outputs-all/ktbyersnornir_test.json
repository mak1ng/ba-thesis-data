	0
from getpass import getpass [EOL] from pprint import pprint [EOL] [EOL] [EOL] def nornir_set_creds ( norn , username = None , password = None ) : [EOL] [docstring] [EOL] if not username : [EOL] username = input ( [string] ) [EOL] if not password : [EOL] password = getpass ( ) [EOL] [EOL] for host_obj in norn . inventory . hosts . values ( ) : [EOL] host_obj . username = username [EOL] host_obj . password = password [EOL] [EOL] [EOL] def std_print ( agg_result ) : [EOL] print ( ) [EOL] for k , multi_result in agg_result . items ( ) : [EOL] print ( [string] * [number] ) [EOL] print ( k ) [EOL] for result_obj in multi_result : [EOL] if isinstance ( result_obj . result , str ) : [EOL] print ( result_obj . result ) [EOL] else : [EOL] pprint ( result_obj . result ) [EOL] print ( [string] * [number] ) [EOL] print ( ) [EOL] print ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
	0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import napalm_get [EOL] from nornir . plugins . tasks . networking import netmiko_send_command [EOL] from nornir . core . filter import F [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds , std_print [EOL] [EOL] [comment] [EOL] import requests [EOL] from requests . packages . urllib3 . exceptions import InsecureRequestWarning [EOL] [EOL] requests . packages . urllib3 . disable_warnings ( InsecureRequestWarning ) [EOL] [EOL] [EOL] def main ( ) : [EOL] norn = InitNornir ( config_file = [string] ) [EOL] [EOL] f = F ( groups__contains = [string] ) [EOL] napalm_hosts = norn . filter ( f ) [EOL] [EOL] result = napalm_hosts . run ( task = napalm_get , getters = [ [string] ] ) [EOL] [EOL] std_print ( result ) [EOL] [EOL] netmiko_hosts = norn . filter ( F ( groups__contains = [string] ) ) [EOL] result = netmiko_hosts . run ( netmiko_send_command , num_workers = [number] , command_string = [string] , use_textfsm = True , ) [EOL] [EOL] std_print ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import napalm_get [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds , std_print [EOL] [EOL] [EOL] def main ( ) : [EOL] norn = InitNornir ( config_file = [string] ) [EOL] nornir_set_creds ( norn ) [EOL] result = norn . run ( task = napalm_get , getters = [ [string] ] ) [EOL] std_print ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import napalm_get [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds , std_print [EOL] [EOL] [comment] [EOL] import requests [EOL] from requests . packages . urllib3 . exceptions import InsecureRequestWarning [EOL] [EOL] requests . packages . urllib3 . disable_warnings ( InsecureRequestWarning ) [EOL] [EOL] [EOL] def main ( ) : [EOL] with InitNornir ( config_file = [string] ) as norn : [EOL] nornir_set_creds ( norn ) [EOL] result = norn . run ( task = napalm_get , num_workers = [number] , getters = [ [string] ] ) [EOL] std_print ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import napalm_get [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds , std_print [EOL] [EOL] [comment] [EOL] import requests [EOL] from requests . packages . urllib3 . exceptions import InsecureRequestWarning [EOL] [EOL] requests . packages . urllib3 . disable_warnings ( InsecureRequestWarning ) [EOL] [EOL] [EOL] def get_and_close ( task ) : [EOL] result = task . run ( task = napalm_get , getters = [ [string] ] ) [EOL] task . host . close_connection ( [string] ) [EOL] return result [EOL] [EOL] [EOL] def main ( ) : [EOL] norn = InitNornir ( config_file = [string] ) [EOL] nornir_set_creds ( norn ) [EOL] result = norn . run ( task = get_and_close , num_workers = [number] ) [EOL] std_print ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
	0
	0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import netmiko_send_config [EOL] from nornir . plugins . functions . text import print_result [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds [EOL] [EOL] [EOL] def main ( ) : [EOL] [EOL] [comment] [EOL] brg = InitNornir ( config_file = [string] ) [EOL] nornir_set_creds ( brg ) [EOL] [EOL] result = brg . run ( netmiko_send_config , num_workers = [number] , config_commands = [ [string] ] ) [EOL] [EOL] print_result ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import netmiko_send_command [EOL] from nornir . plugins . functions . text import print_result [EOL] from nornir_test . nornir_utilities import nornir_set_creds [EOL] [EOL] [EOL] def netmiko_test ( task ) : [EOL] net_connect = task . host . get_connection ( [string] , task . nornir . config ) [EOL] net_connect . enable ( ) [EOL] task . run ( netmiko_send_command , command_string = [string] , use_textfsm = True ) [EOL] [EOL] [EOL] def main ( ) : [EOL] norn = InitNornir ( config_file = [string] ) [EOL] nornir_set_creds ( norn ) [EOL] result = norn . run ( netmiko_test , num_workers = [number] ) [EOL] print_result ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import netmiko_send_command [EOL] from nornir . plugins . functions . text import print_result [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds [EOL] [EOL] [EOL] def main ( ) : [EOL] [EOL] [comment] [EOL] norn = InitNornir ( config_file = [string] ) [EOL] nornir_set_creds ( norn ) [EOL] [EOL] result = norn . run ( netmiko_send_command , num_workers = [number] , command_string = [string] , use_textfsm = True , ) [EOL] print_result ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import netmiko_file_transfer [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds , std_print [EOL] [EOL] [EOL] def main ( ) : [EOL] [EOL] [comment] [EOL] norn = InitNornir ( config_file = [string] ) [EOL] nornir_set_creds ( norn ) [EOL] test_file = [string] [EOL] [EOL] result = norn . run ( netmiko_file_transfer , source_file = test_file , dest_file = test_file , direction = [string] , num_workers = [number] , ) [EOL] std_print ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
from typing import Any [EOL] import typing [EOL] from nornir import InitNornir [EOL] from nornir . plugins . tasks . networking import netmiko_file_transfer [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds , std_print [EOL] [EOL] [EOL] def os_upgrade ( task ) : [EOL] file_name = task . host . get ( [string] ) [EOL] result = task . run ( task = netmiko_file_transfer , source_file = file_name , dest_file = file_name , direction = [string] , ) [EOL] return result [EOL] [EOL] [EOL] def main ( ) : [EOL] [EOL] [comment] [EOL] norn = InitNornir ( config_file = [string] ) [EOL] nornir_set_creds ( norn ) [EOL] [EOL] result = norn . run ( task = os_upgrade , num_workers = [number] ) [EOL] std_print ( result ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] import sys [EOL] [EOL] from nornir . core import InitNornir [EOL] from nornir . plugins . tasks . networking import netmiko_file_transfer [EOL] from nornir . plugins . tasks . networking import netmiko_send_command [EOL] [EOL] from nornir_test . nornir_utilities import nornir_set_creds , std_print [EOL] [EOL] [EOL] def os_upgrade ( task ) : [EOL] file_name = task . host . get ( [string] ) [EOL] task . run ( task = netmiko_file_transfer , source_file = file_name , dest_file = file_name , direction = [string] , ) [EOL] return [string] [EOL] [EOL] [EOL] def continue_func ( msg = [string] ) : [EOL] response = input ( msg ) . lower ( ) [EOL] if [string] in response : [EOL] return True [EOL] else : [EOL] sys . exit ( ) [EOL] [EOL] [EOL] def main ( ) : [EOL] [EOL] [comment] [EOL] norn = InitNornir ( config_file = [string] ) [EOL] nornir_set_creds ( norn ) [EOL] [EOL] print ( [string] ) [EOL] result = norn . run ( task = os_upgrade , num_workers = [number] ) [EOL] std_print ( result ) [EOL] [EOL] [comment] [EOL] norn_ios = norn . filter ( hostname = [string] ) [EOL] [EOL] [comment] [EOL] result = norn_ios . run ( netmiko_send_command , command_string = [string] , num_workers = [number] ) [EOL] std_print ( result ) [EOL] continue_func ( ) [EOL] [EOL] [comment] [EOL] result = norn_ios . run ( netmiko_send_command , command_string = [string] , num_workers = [number] ) [EOL] std_print ( result ) [EOL] [EOL] [comment] [EOL] continue_func ( msg = [string] ) [EOL] result = norn_ios . run ( netmiko_send_command , use_timing = True , command_string = [string] , num_workers = [number] ) [EOL] [EOL] [comment] [EOL] for device_name , multi_result in result . items ( ) : [EOL] if [string] in multi_result [ [number] ] . result : [EOL] result = norn_ios . run ( netmiko_send_command , use_timing = True , command_string = [string] ) [EOL] [EOL] print ( [string] ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0