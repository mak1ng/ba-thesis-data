from typing import Any [EOL] import typing [EOL] import json [EOL] [EOL] from tornado . testing import AsyncHTTPTestCase [EOL] [EOL] import api [EOL] [EOL] [EOL] class APITest ( AsyncHTTPTestCase ) : [EOL] def get_app ( self ) : [EOL] return api . make_app ( ) [EOL] [EOL] def test_homepage ( self ) : [EOL] response = self . fetch ( [string] ) [EOL] self . assertEqual ( response . code , [number] ) [EOL] [EOL] def test_recommendations ( self ) : [EOL] response = self . fetch ( [string] , method = [string] , body = json . dumps ( { [string] : [string] } ) , headers = { [string] : [string] , [string] : [string] , } , ) [EOL] self . assertEqual ( response . code , [number] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0
from typing import Any , Dict [EOL] import typing [EOL] import builtins [EOL] import requests [EOL] import tornado [EOL] from typing import Any , Dict [EOL] [EOL] import arrow [EOL] import requests [EOL] from tornado . ioloop import IOLoop [EOL] from tornado . web import Application , RequestHandler [EOL] [EOL] [EOL] class CurrentTimeHandler ( RequestHandler ) : [EOL] def set_default_headers ( self ) : [EOL] self . set_header ( [string] , [string] ) [EOL] self . set_header ( [string] , [string] ) [EOL] self . set_header ( [string] , [string] ) [EOL] [EOL] def get ( self ) : [EOL] current_time = arrow . now ( ) . format ( [string] ) [EOL] self . write ( { [string] : f"{ current_time }" } ) [EOL] [EOL] [EOL] class RecommendationsHandler ( RequestHandler ) : [EOL] def set_default_headers ( self ) : [EOL] self . set_header ( [string] , [string] ) [EOL] self . set_header ( [string] , [string] ) [EOL] self . set_header ( [string] , [string] ) [EOL] [EOL] def post ( self ) : [EOL] api_key = [string] [EOL] url = [string] [EOL] payload = self . request . body [EOL] headers = { [string] : f"{ api_key }" , [string] : [string] , } [EOL] response = requests . request ( [string] , url , data = payload , headers = headers ) [EOL] [EOL] self . write ( response . text ) [EOL] [EOL] def options ( self ) : [EOL] self . set_status ( [number] ) [EOL] self . finish ( ) [EOL] [EOL] [EOL] def make_app ( ) : [EOL] urls = [ ( [string] , CurrentTimeHandler ) , ( [string] , RecommendationsHandler ) , ] [EOL] return Application ( urls , debug = True ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] app = make_app ( ) [EOL] app . listen ( [number] ) [EOL] IOLoop . instance ( ) . start ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $None$ 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $None$ 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.bytes$ 0 0 0 0 0 0 0 $typing.Dict[builtins.str,typing.Any]$ 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 $requests.models.Response$ 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.bytes$ 0 $typing.Dict[builtins.str,typing.Any]$ 0 $typing.Dict[builtins.str,typing.Any]$ 0 0 0 0 0 0 0 $requests.models.Response$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $tornado.web.Application$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $tornado.web.Application$ 0 0 0 0 0 $tornado.web.Application$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0