import builtins [EOL] from typing import Tuple , Type [EOL] import typing [EOL] import vehicle [EOL] import numpy as np [EOL] [EOL] [EOL] class Vehicle : [EOL] pos = ( [number] , [number] ) [EOL] pos_old = ( [number] , [number] ) [EOL] dir = ( [number] , [number] ) [EOL] dead = [number] [EOL] old_action = [number] [EOL] actions = list ( ) [EOL] [EOL] def __init__ ( self , pos_iniz ) : [EOL] self . pos = pos_iniz [EOL] self . actions . append ( ( - [number] , [number] ) ) [EOL] self . actions . append ( ( - [number] , [number] ) ) [EOL] self . actions . append ( ( [number] , [number] ) ) [EOL] self . actions . append ( ( [number] , [number] ) ) [EOL] self . actions . append ( ( [number] , [number] ) ) [EOL] self . actions . append ( ( [number] , - [number] ) ) [EOL] self . actions . append ( ( [number] , - [number] ) ) [EOL] self . actions . append ( ( - [number] , - [number] ) ) [EOL] [EOL] def update_pos ( self , action ) : [EOL] tup = ( ( self . pos [ [number] ] + ( self . actions [ action ] ) [ [number] ] ) , ( self . pos [ [number] ] + ( self . actions [ action ] ) [ [number] ] ) ) [comment] [EOL] self . pos = tup [EOL] [EOL] self . old_action = action [EOL] [EOL] def move_gir ( self , move ) : [EOL] [comment] [EOL] new_action = [number] [EOL] [EOL] if move == [number] : [EOL] new_action = self . old_action [comment] [EOL] elif move == [number] : [EOL] new_action = ( self . old_action + [number] ) % [number] [comment] [EOL] elif move == [number] : [EOL] if self . old_action == [number] : [EOL] new_action = [number] [comment] [EOL] else : [EOL] new_action = self . old_action - [number] [EOL] self . update_pos ( new_action ) [EOL] [EOL] [EOL] [EOL] [EOL] [EOL] [EOL] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Tuple[builtins.int,builtins.int]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Tuple[builtins.int,builtins.int]$ 0 0 0 0 0 $typing.Tuple[builtins.int,builtins.int]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Tuple[builtins.int,builtins.int]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Tuple[builtins.int,builtins.int]$ 0 $typing.Tuple[builtins.int,builtins.int]$ 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0