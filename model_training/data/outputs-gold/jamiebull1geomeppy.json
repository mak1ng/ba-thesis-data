from typing import List [EOL] import typing [EOL] import os [EOL] [EOL] from setuptools import setup [EOL] [EOL] THIS_DIR = os . path . dirname ( os . path . abspath ( __file__ ) ) [EOL] [EOL] with open ( os . path . join ( THIS_DIR , [string] ) ) as f : [EOL] install_requires = [ line for line in f if line and line [ [number] ] not in [string] ] [EOL] [EOL] with open ( os . path . join ( THIS_DIR , [string] ) ) as f : [EOL] test_requires = [ line for line in f if line and line [ [number] ] not in [string] ] [EOL] [EOL] with open ( os . path . join ( THIS_DIR , [string] ) ) as f : [EOL] long_description = f . read ( ) [EOL] [EOL] setup ( name = [string] , packages = [ [string] , [string] , [string] , [string] ] , version = [string] , description = [string] , long_description = long_description , long_description_content_type = [string] , author = [string] , author_email = [string] , url = [string] , download_url = [string] , license = [string] , keywords = [ [string] , [string] , [string] ] , platforms = [string] , install_requires = install_requires , classifiers = [ [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , ] , extras_require = { [string] : [ [string] , [string] ] , [string] : test_requires , } , include_package_data = True , ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0
	0
from typing import Tuple , Any , List [EOL] import typing [EOL] [docstring] [EOL] [EOL] [EOL] class TestAddShadingBlock : [EOL] def test_add_shading_block_smoke_test ( self , new_idf ) : [EOL] [comment] [EOL] idf = new_idf [EOL] name = [string] [EOL] height = [number] [EOL] coordinates = [ ( [number] , [number] ) , ( [number] , [number] ) , ( [number] , [number] ) , ( [number] , [number] ) , ( [number] , [number] ) , ( [number] , [number] ) , ( [number] , [number] ) , ( [number] , [number] ) , ( [number] , [number] ) , ( [number] , [number] ) , ] [EOL] idf . add_shading_block ( name , coordinates , height ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 $builtins.str$ 0 0 0 $builtins.float$ 0 0 0 $typing.List[typing.Tuple[builtins.float,builtins.float]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 $builtins.str$ 0 $typing.List[typing.Tuple[builtins.float,builtins.float]]$ 0 $builtins.float$ 0 0