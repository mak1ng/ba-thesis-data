import ipdb [EOL] [EOL] [EOL] def login ( payload ) : [EOL] if len ( payload ) == [number] : [EOL] return { [string] : [ [string] ] , [string] : [ [string] ] } [EOL] [EOL] if not [string] in payload . keys ( ) : [EOL] return { [string] : [ [string] ] } [EOL] [EOL] if not [string] in payload . keys ( ) : [EOL] return { [string] : [ [string] ] } [EOL] [EOL] return { [string] : [string] } [EOL] [EOL] [EOL] def before_feature ( context , feature ) : [EOL] context . username = [string] [EOL] context . login = login [EOL] [EOL] [EOL] def after_step ( context , step ) : [EOL] if step . status == [string] : [EOL] ipdb . spost_mortem ( step . exc_traceback ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
import json [EOL] [EOL] from behave import given , then , when [EOL] [EOL] [EOL] @ given ( [string] ) def check_user_in_database ( context , username ) : [EOL] assert username == context . username [EOL] [EOL] [EOL] @ when ( [string] ) def post_login ( context ) : [EOL] context . result = context . login ( json . loads ( context . text ) ) [EOL] [EOL] [EOL] @ then ( [string] ) def verify_received_message ( context ) : [EOL] assert context . result == json . loads ( context . text ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0