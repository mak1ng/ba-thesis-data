[comment] [EOL] [EOL] from instaloader . __main__ import main [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any , Set [EOL] import typing [EOL] from glob import glob [EOL] from sys import argv [EOL] from os import chdir [EOL] [EOL] from instaloader import Instaloader , Post , Profile , load_structure_from_file [EOL] [EOL] [comment] [EOL] L = Instaloader ( ) [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] try : [EOL] TARGET = argv [ [number] ] [EOL] except IndexError : [EOL] raise SystemExit ( [string] ) [EOL] [EOL] [comment] [EOL] chdir ( TARGET ) [EOL] offline_posts = set ( filter ( lambda s : isinstance ( s , Post ) , ( load_structure_from_file ( L . context , file ) for file in ( glob ( [string] ) + glob ( [string] ) ) ) ) ) [EOL] [EOL] [comment] [EOL] post_iterator = Profile . from_username ( L . context , TARGET ) . get_posts ( ) [EOL] online_posts = set ( post_iterator ) [EOL] [EOL] if online_posts - offline_posts : [EOL] print ( [string] ) [EOL] print ( [string] . join ( str ( p ) for p in ( online_posts - offline_posts ) ) ) [EOL] [EOL] if offline_posts - online_posts : [EOL] print ( [string] ) [EOL] print ( [string] . join ( str ( p ) for p in ( offline_posts - online_posts ) ) ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 $typing.Set[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 $typing.Set[typing.Any]$ 0 0 0 $typing.Any$ 0 0 0 0 $typing.Set[typing.Any]$ 0 $typing.Set[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Set[typing.Any]$ 0 $typing.Set[typing.Any]$ 0 0 0 0 0 0 $typing.Set[typing.Any]$ 0 $typing.Set[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Set[typing.Any]$ 0 $typing.Set[typing.Any]$ 0 0 0 0
from typing import Any , List [EOL] import typing [EOL] from itertools import islice [EOL] from math import ceil [EOL] [EOL] from instaloader import Instaloader , Profile [EOL] [EOL] PROFILE = ... [comment] [EOL] X_percentage = [number] [comment] [EOL] [EOL] L = Instaloader ( ) [EOL] [EOL] profile = Profile . from_username ( L . context , PROFILE ) [EOL] posts_sorted_by_likes = sorted ( profile . get_posts ( ) , key = lambda p : p . likes + p . comments ) [EOL] [EOL] for post in islice ( posts_sorted_by_likes , ceil ( profile . mediacount * X_percentage / [number] ) ) : [EOL] L . download_post ( post , PROFILE ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 $builtins.int$ 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 $typing.List[typing.Any]$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 $typing.Any$ 0 0 0 $builtins.int$ 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 0
from typing import Any , Set [EOL] import typing [EOL] import instaloader [EOL] [EOL] L = instaloader . Instaloader ( ) [EOL] [EOL] USER = [string] [EOL] PROFILE = USER [EOL] [EOL] [comment] [EOL] L . load_session_from_file ( USER ) [EOL] [EOL] profile = instaloader . Profile . from_username ( L . context , PROFILE ) [EOL] [EOL] likes = set ( ) [EOL] print ( [string] . format ( profile . username ) ) [EOL] for post in profile . get_posts ( ) : [EOL] print ( post ) [EOL] likes = likes | set ( post . get_likes ( ) ) [EOL] [EOL] print ( [string] . format ( profile . username ) ) [EOL] followers = set ( profile . get_followers ( ) ) [EOL] [EOL] ghosts = followers - likes [EOL] [EOL] print ( [string] ) [EOL] with open ( [string] , [string] ) as f : [EOL] for ghost in ghosts : [EOL] print ( ghost . username , file = f ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $typing.Any$ 0 $builtins.str$ 0 0 0 0 $typing.Any$ 0 0 0 $builtins.str$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 $typing.Set[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 $typing.Set[typing.Any]$ 0 $typing.Set[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Set[typing.Any]$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 $typing.Set[typing.Any]$ 0 $typing.Set[typing.Any]$ 0 $typing.Set[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Set[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
[docstring] [EOL] [EOL] [EOL] __version__ = [string] [EOL] [EOL] [EOL] try : [EOL] [comment] [EOL] import win_unicode_console [comment] [EOL] except ImportError : [EOL] pass [EOL] else : [EOL] win_unicode_console . enable ( ) [EOL] [EOL] from . exceptions import * [EOL] from . instaloader import Instaloader [EOL] from . instaloadercontext import InstaloaderContext [EOL] from . structures import ( Highlight , Post , PostSidecarNode , PostComment , PostCommentAnswer , PostLocation , Profile , Story , StoryItem , load_structure_from_file , save_structure_to_file ) [EOL]	0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] import telegram [EOL] import logging [EOL] [EOL] from telegram import Bot [EOL] from telegram . ext import Updater , CommandHandler , ConversationHandler , MessageHandler , Filters [EOL] [EOL] [comment] [EOL] logging . basicConfig ( format = [string] , level = logging . DEBUG ) [EOL] [EOL] PHOTO = [number] [EOL] [EOL] [EOL] def start ( bot , update ) : [EOL] update . message . reply_text ( text = [string] ) [EOL] return PHOTO [EOL] [EOL] [EOL] def photo ( bot , update ) : [EOL] bot . send_photo ( chat_id = [string] , photo = open ( file = [string] , mode = [string] ) , ) [EOL] return ConversationHandler . END [EOL] [EOL] [EOL] bot = Bot ( token = [string] , base_url = [string] , base_file_url = [string] ) [EOL] updater = Updater ( bot = bot ) [EOL] [EOL] conversation_handler = ConversationHandler ( entry_points = [ CommandHandler ( [string] , start ) ] , states = { PHOTO : [ MessageHandler ( filters = Filters . photo , callback = photo ) ] , } , fallbacks = [ ] ) [EOL] [EOL] updater . dispatcher . add_handler ( conversation_handler ) [EOL] [EOL] updater . start_polling ( poll_interval = [number] ) [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] updater . idle ( )	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0
class InstaloaderException ( Exception ) : [EOL] [docstring] [EOL] pass [EOL] [EOL] [EOL] class QueryReturnedBadRequestException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class QueryReturnedNotFoundException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class QueryReturnedForbiddenException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class ProfileNotExistsException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class ProfileHasNoPicsException ( InstaloaderException ) : [EOL] [docstring] [EOL] pass [EOL] [EOL] [EOL] class PrivateProfileNotFollowedException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class LoginRequiredException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class TwoFactorAuthRequiredException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class InvalidArgumentException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class BadResponseException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class BadCredentialsException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class ConnectionException ( InstaloaderException ) : [EOL] pass [EOL] [EOL] [EOL] class PostChangedException ( InstaloaderException ) : [EOL] [docstring] [EOL] pass [EOL] [EOL] [EOL] class TooManyRequestsException ( ConnectionException ) : [EOL] pass [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0