	0
[comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [EOL] [EOL] [comment] [EOL] from typing import List , Any [EOL] import markingpy [EOL] import typing [EOL] from markingpy import exercise , mark_scheme [EOL] [EOL] ms = mark_scheme ( submission_path = [string] , style_marks = [number] ) [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] @ exercise ( [string] ) def first_ex ( arg1 , arg2 , * , kwonly_arg = None ) : [EOL] [docstring] [EOL] if kwonly_arg : [EOL] print ( kwonly_arg ) [EOL] return arg1 + arg2 [EOL] [EOL] [EOL] [comment] [EOL] first_ex . add_test_call ( ( [number] , [number] ) , marks = [number] ) [EOL] [comment] [EOL] first_ex . add_test_call ( first_ex ( - [number] , [number] , kwonly_arg = [number] ) ) [EOL] [comment] [EOL] [comment] [EOL] cases = [ first_ex ( [number] , [number] ) , first_ex ( [number] , [number] ) , first_ex ( [number] , [number] ) , first_ex ( [number] , [number] , kwonly_arg = [string] ) , ] [EOL] first_ex . timing_test ( cases , marks = [number] ) [EOL] [EOL] [EOL] [comment] [EOL] @ first_ex . test ( marks = [number] ) def custom_test ( ) : [EOL] [docstring] [EOL] try : [EOL] [comment] [EOL] output = first_ex ( [string] , [number] ) [EOL] except ( TypeError , ValueError ) : [EOL] return True [comment] [EOL] [EOL] return False [comment] [EOL] [EOL] [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] @ exercise ( name = [string] , descr = [string] ) class ExerciseClass : [EOL] [EOL] def __init__ ( self , name , description ) : [EOL] self . name = name [EOL] self . description = description [EOL] [EOL] def method_one ( self , arg ) : [EOL] return self . name + [string] + self . description + [string] + arg [EOL] [EOL] def method_two ( self , other_name ) : [EOL] return self . name + [string] + other_name [EOL] [EOL] [EOL] instance_1 = ExerciseClass ( [string] , [string] ) [EOL] instance_1 . method_one . add_test_call ( [string] , marks = [number] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $markingpy.markscheme.MarkingScheme$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $markingpy.data.scheme.ExerciseClass$ 0 0 0 0 0 0 0 0 $markingpy.data.scheme.ExerciseClass$ 0 0 0 0 0 0 0 0 0 0 0 0