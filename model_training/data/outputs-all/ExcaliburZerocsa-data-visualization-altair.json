from typing import Any [EOL] import typing [EOL] import pandas as pd [EOL] [EOL] from . plots import create_charts [EOL] from . rendering import render_webpage_string [EOL] [EOL] DATA_FILE = [string] [EOL] OUTPUT_FILE = [string] [EOL] [EOL] def main ( ) : [EOL] data = pd . read_csv ( DATA_FILE ) [EOL] [EOL] charts = create_charts ( data ) [EOL] vegalite_spec = charts . to_json ( ) [EOL] [EOL] webpage_content = render_webpage_string ( vegalite_spec ) [EOL] [EOL] with open ( OUTPUT_FILE , [string] ) as webpage_file : [EOL] webpage_file . write ( webpage_content ) [EOL] [EOL] print ( [string] + OUTPUT_FILE ) [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 $None$ 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0
import csadatavis . plots [EOL] import csadatavis . rendering [EOL]	0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import altair [EOL] import typing [EOL] import pandas [EOL] import altair as alt [EOL] import pandas as pd [EOL] [EOL] def create_charts ( data ) : [EOL] [docstring] [EOL] brush = alt . selection ( type = [string] , encodings = [ [string] ] ) [EOL] [EOL] monthly_summary = create_monthly_summary ( data , brush ) [EOL] yearly_summary = create_yearly_summary ( data , brush ) [EOL] [EOL] attendance_monthly_summary = create_attendance_monthly_summary ( data , brush ) [EOL] attendance_yearly_summary = create_attendance_yearly_summary ( data , brush ) [EOL] [EOL] attendance_histogram = create_attendance_histogram ( data , brush ) [EOL] meeting_type_summary = create_meeting_type_summary ( data , brush ) [EOL] meeting_type_attendance = create_meeting_type_attendance ( data , brush ) [EOL] [EOL] top_row = monthly_summary | yearly_summary | attendance_histogram [EOL] bottom_row = attendance_monthly_summary | attendance_yearly_summary | ( meeting_type_summary & meeting_type_attendance ) [EOL] [EOL] charts = top_row & bottom_row [EOL] [EOL] return charts [EOL] [EOL] def create_monthly_summary ( data , brush ) : [EOL] [docstring] [EOL] monthly_summary = alt . Chart ( data ) . encode ( alt . X ( [string] , timeUnit = [string] ) , y = [string] , color = [string] ) . transform_filter ( brush . ref ( ) ) [EOL] [EOL] points = monthly_summary . mark_circle ( ) [EOL] lines = monthly_summary . mark_line ( opacity = [number] ) [EOL] [EOL] return points + lines [EOL] [EOL] def create_yearly_summary ( data , brush ) : [EOL] [docstring] [EOL] return alt . Chart ( data ) . mark_bar ( ) . encode ( x = [string] , y = [string] ) . transform_filter ( brush . ref ( ) ) [EOL] [EOL] def create_attendance_monthly_summary ( data , brush ) : [EOL] [docstring] [EOL] return alt . Chart ( data ) . mark_bar ( ) . encode ( alt . X ( [string] , timeUnit = [string] ) , y = [string] ) . transform_filter ( brush . ref ( ) ) [EOL] [EOL] def create_attendance_yearly_summary ( data , brush ) : [EOL] [docstring] [EOL] return alt . Chart ( data ) . mark_bar ( ) . encode ( x = [string] , y = [string] ) . transform_filter ( brush . ref ( ) ) [EOL] [EOL] def create_attendance_histogram ( data , brush ) : [EOL] [docstring] [EOL] return alt . Chart ( data ) . mark_bar ( ) . encode ( alt . X ( [string] , bin = True ) , y = [string] , color = [string] , tooltip = [string] ) . transform_filter ( brush . ref ( ) ) [EOL] [EOL] def create_meeting_type_summary ( data , brush ) : [EOL] [docstring] [EOL] return alt . Chart ( data ) . mark_bar ( ) . encode ( x = [string] , y = [string] , color = [string] , opacity = alt . condition ( brush , alt . OpacityValue ( [number] ) , alt . OpacityValue ( [number] ) ) ) . properties ( selection = brush ) [EOL] [EOL] def create_meeting_type_attendance ( data , brush ) : [EOL] return alt . Chart ( data ) . mark_point ( ) . encode ( alt . Tooltip ( [string] ) , x = [string] , y = [string] , size = [string] ) . transform_filter ( brush . ref ( ) ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $altair.Chart$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $altair.Chart$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $altair.Chart$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $altair.Chart$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $altair.Chart$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $altair.Chart$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $altair.Chart$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $altair.Chart$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
import builtins [EOL] [docstring] [EOL] [EOL] import chevron [EOL] [EOL] PLOTS_TEMPLATE_FILE = [string] [EOL] SPEC_TAG = [string] [EOL] [EOL] def render_webpage_string ( vegalite_spec ) : [EOL] [docstring] [EOL] with open ( PLOTS_TEMPLATE_FILE , [string] ) as template_file : [EOL] return chevron . render ( template_file , { SPEC_TAG : vegalite_spec } ) [EOL]	0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0
	0
[docstring] [EOL] import unittest [EOL] [EOL] from csadatavis . __main__ import main [EOL] [EOL] class ScriptTests ( unittest . TestCase ) : [EOL] [EOL] def test_script ( self ) : [EOL] [docstring] [EOL] main ( ) [EOL] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $None$ 0 0 0 0 0 0 0 0 0 0 0 0