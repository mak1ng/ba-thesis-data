	0
import builtins [EOL] import sys [EOL] from lang import lex , parse , SchemeError [EOL] [EOL] SNIPPET_SIZE = [number] [EOL] [EOL] if __name__ == [string] : [EOL] while True : [EOL] print ( [string] , end = [string] ) [EOL] s = input ( ) [EOL] [EOL] if s == [string] : [EOL] sys . exit ( ) [EOL] [EOL] try : [EOL] print ( parse ( lex ( s ) ) ) [EOL] except SchemeError as error : [EOL] if error . i is not None : [EOL] snippet = s [ error . i - SNIPPET_SIZE : error . i + SNIPPET_SIZE ] [EOL] [EOL] if error . i > SNIPPET_SIZE : [EOL] snippet = [string] + snippet [EOL] snippet_i = [number] + SNIPPET_SIZE [EOL] else : [EOL] snippet_i = error . i [EOL] [EOL] if error . i < len ( s ) - SNIPPET_SIZE : [EOL] snippet = snippet + [string] [EOL] snippet = [string] + snippet [EOL] snippet_i += [number] [EOL] print ( snippet ) [EOL] print ( [string] * snippet_i + [string] ) [EOL] [EOL] print ( [string] . format ( ( [string] if error . i is None else f' [string] { error . i }' ) , error ) )	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 $builtins.str$ 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 $builtins.int$ 0 0 $builtins.str$ 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0