from typing import Any , List [EOL] import typing [EOL] import sys [EOL] import os [EOL] from os . path import abspath , dirname , join [EOL] [EOL] try : [EOL] from django . conf import settings [EOL] from django . test . utils import get_runner [EOL] [EOL] if not os . environ . get ( [string] ) : [EOL] print ( [string] ) [EOL] os . environ . setdefault ( [string] , [string] ) [EOL] [EOL] try : [EOL] import django [EOL] sys . path . append ( abspath ( join ( dirname ( __file__ ) , [string] ) ) ) [EOL] setup = django . setup [EOL] except AttributeError : [EOL] pass [EOL] else : [EOL] setup ( ) [EOL] [EOL] except ImportError : [EOL] import traceback [EOL] traceback . print_exc ( ) [EOL] raise ImportError ( [string] ) [EOL] [EOL] [EOL] def run_tests ( * test_args ) : [EOL] [docstring] [EOL] if not test_args : [EOL] test_args = [ [string] ] [EOL] [EOL] [comment] [EOL] runner = get_runner ( settings ) [EOL] test_runner = runner ( ) [EOL] [EOL] failures = test_runner . run_tests ( test_args ) [EOL] [EOL] if failures : [EOL] sys . exit ( bool ( failures ) ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] run_tests ( * sys . argv [ [number] : ] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from setuptools import setup [EOL] [EOL] setup ( name = [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any , List , Union , Dict [EOL] import typing [EOL] [docstring] [EOL] [EOL] import os [EOL] import environ [EOL] [EOL] [comment] [EOL] BASE_DIR = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ) ) ) [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] SECRET_KEY = [string] [EOL] [EOL] [comment] [EOL] DEBUG = False [EOL] [EOL] ALLOWED_HOSTS = [ [string] ] [EOL] [EOL] [comment] [EOL] [EOL] INSTALLED_APPS = [ [string] , [string] , [string] , [string] , [string] , [string] , [string] , ] [EOL] [EOL] MIDDLEWARE = [ [string] , [string] , [string] , [string] , [string] , [string] , [string] , ] [EOL] [EOL] ROOT_URLCONF = [string] [EOL] [EOL] TEMPLATES = [ { [string] : [string] , [string] : [ ] , [string] : True , [string] : { [string] : [ [string] , [string] , [string] , [string] , ] , } , } , ] [EOL] [EOL] WSGI_APPLICATION = [string] [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] DATABASES = { [string] : { [string] : [string] , [string] : [string] , [string] : [string] , [string] : [string] , [string] : [string] , [string] : [string] , } , } [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] AUTH_PASSWORD_VALIDATORS = [ { [string] : [string] , } , { [string] : [string] , } , { [string] : [string] , } , { [string] : [string] , } , ] [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] LANGUAGE_CODE = [string] [EOL] [EOL] TIME_ZONE = [string] [EOL] [EOL] USE_I18N = True [EOL] [EOL] USE_L10N = True [EOL] [EOL] USE_TZ = True [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] STATIC_URL = [string] [EOL] [EOL] STATIC_ROOT = os . path . join ( os . path . dirname ( os . path . dirname ( BASE_DIR ) ) , [string] ) [EOL] MEDIA_ROOT = os . path . join ( os . path . dirname ( os . path . dirname ( BASE_DIR ) ) , [string] ) [EOL] [EOL] [EOL] [EOL] [comment] [EOL] SECURE_HSTS_SECONDS = [number] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 $typing.List[typing.Dict[builtins.str,typing.Union[typing.Dict[builtins.str,typing.List[builtins.str]],typing.List[typing.Any],builtins.bool,builtins.str]]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 $typing.Dict[builtins.str,typing.Dict[builtins.str,builtins.str]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Dict[builtins.str,builtins.str]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 $builtins.str$ 0 0 0 0 $builtins.bool$ 0 0 0 0 $builtins.bool$ 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0
from typing import Any , List [EOL] import typing [EOL] from django . contrib import admin [EOL] from django . urls import path [EOL] from django . conf . urls import include [EOL] from portal . views . alunos_por_serie_turno import AlunosSerieTurno [EOL] from portal . views . ambientes import Ambientes [EOL] from portal . views . modalidades import ModalidadesPraticadas [EOL] from portal . views . servidores_atuacao import ServidoresAtuacaoEscola [EOL] from portal . views . total_servidores_atuacao import TotalServidoresAtuacaoEscola [EOL] from portal . views . total_servidores_escolaridade import ServidoresEscolarizacao [EOL] from portal . views . total_vagas_mat_serie import VagasMatriculasBySerie [EOL] from portal . views . turmas_serie_turno import TurmasSerieTurno [EOL] from rest_framework import routers [EOL] from rest_framework_swagger . views import get_swagger_view [EOL] [EOL] [comment] [EOL] from django . conf import settings [EOL] from django . conf . urls . static import static [EOL] [comment] [EOL] [EOL] from escolas . api . viewsets import EscolasViewSet [EOL] from turmas . api . viewsets import TurmasViewSet [EOL] from servidores . api . viewsets import ServidoresViewSet [EOL] from ambientes . api . viewsets import AmbientesViewSet [EOL] [EOL] schema_view = get_swagger_view ( title = [string] ) [EOL] [EOL] router = routers . DefaultRouter ( ) [EOL] router . register ( [string] , EscolasViewSet ) [EOL] router . register ( [string] , TurmasViewSet ) [EOL] router . register ( [string] , ServidoresViewSet ) [EOL] router . register ( [string] , AmbientesViewSet ) [EOL] [comment] [EOL] [EOL] urlpatterns = [ path ( [string] , include ( router . urls ) ) , path ( [string] , schema_view ) , path ( [string] , schema_view ) , path ( [string] , admin . site . urls ) , path ( [string] , ModalidadesPraticadas . as_view ( ) , name = [string] ) , path ( [string] , VagasMatriculasBySerie . as_view ( ) , name = [string] ) , path ( [string] , Ambientes . as_view ( ) , name = [string] ) , path ( [string] , ServidoresAtuacaoEscola . as_view ( ) , name = [string] ) , path ( [string] , TotalServidoresAtuacaoEscola . as_view ( ) , name = [string] ) , path ( [string] , ServidoresEscolarizacao . as_view ( ) , name = [string] ) , path ( [string] , AlunosSerieTurno . as_view ( ) , name = [string] ) , path ( [string] , TurmasSerieTurno . as_view ( ) , name = [string] ) , ] + static ( settings . MEDIA_URL , document_root = settings . MEDIA_ROOT ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] [docstring] [EOL] [EOL] import os [EOL] [EOL] from django . core . wsgi import get_wsgi_application [EOL] [EOL] os . environ . setdefault ( [string] , [string] ) [EOL] [EOL] application = get_wsgi_application ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0
	0
from django . contrib import admin [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . test import TestCase [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . shortcuts import render [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . apps import AppConfig [EOL] [EOL] [EOL] class EscolasConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
	0
	0
from typing import Type [EOL] import typing [EOL] import web [EOL] from rest_framework . serializers import ModelSerializer [EOL] from escolas . models import Escolas [EOL] [EOL] [EOL] class EscolasSerializer ( ModelSerializer ) : [EOL] class Meta : [EOL] model = Escolas [EOL] fields = ( [string] ) [EOL] filter_fields = ( [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[web.escolas.api.serializers.EscolasSerializer.Meta]$ 0 0 0 $builtins.str$ 0 0 0 0 0 $builtins.str$ 0 0 0 0 0
	0
from django . apps import AppConfig [EOL] [EOL] [EOL] class TurmasConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
	0
from django . shortcuts import render [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . contrib import admin [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . test import TestCase [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
	0
	0
from typing import Type [EOL] import typing [EOL] import web [EOL] from rest_framework . serializers import ModelSerializer [EOL] from turmas . models import Turmas [EOL] [EOL] [EOL] class TurmasSerializer ( ModelSerializer ) : [EOL] class Meta : [EOL] model = Turmas [EOL] fields = ( [string] ) [EOL] filter_fields = ( [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[web.turmas.api.serializers.TurmasSerializer.Meta]$ 0 0 0 $builtins.str$ 0 0 0 0 0 $builtins.str$ 0 0 0 0 0
from typing import Any , Type [EOL] import typing [EOL] import web [EOL] from rest_framework . response import Response [EOL] from rest_framework . viewsets import ModelViewSet , ReadOnlyModelViewSet [EOL] from turmas . models import Turmas [EOL] from . serializers import TurmasSerializer [EOL] [EOL] [EOL] class TurmasViewSet ( ReadOnlyModelViewSet ) : [EOL] [docstring] [EOL] queryset = Turmas . objects . all ( ) [EOL] serializer_class = TurmasSerializer [EOL] [EOL] def retrieve ( self , request , * args , ** kwargs ) : [EOL] cd_esc = str ( kwargs . get ( [string] , None ) ) [EOL] queryset = Turmas . objects . filter ( codesc = cd_esc ) [EOL] serializer = TurmasSerializer ( queryset , many = True ) [EOL] return Response ( serializer . data ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[web.turmas.api.viewsets.TurmasViewSet]$ 0 0 0 0 0 0 0 0 0 $typing.Type[web.turmas.api.serializers.TurmasSerializer]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 $web.turmas.api.serializers.TurmasSerializer$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 $web.turmas.api.serializers.TurmasSerializer$ 0 0 0 0
	0
from django . contrib import admin [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . apps import AppConfig [EOL] [EOL] [EOL] class ServidoresConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
from django . test import TestCase [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . shortcuts import render [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
	0
from typing import Tuple , Type [EOL] import typing [EOL] import web [EOL] from rest_framework . serializers import ModelSerializer [EOL] from servidores . models import Servidores [EOL] [EOL] [EOL] class ServidoresSerializer ( ModelSerializer ) : [EOL] class Meta : [EOL] model = Servidores [EOL] exclude = ( [string] , ) [EOL] [EOL] filter_fields = ( [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[web.servidores.api.serializers.ServidoresSerializer.Meta]$ 0 0 0 $typing.Tuple[builtins.str]$ 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0
	0
	0
from django . shortcuts import render [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . test import TestCase [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . apps import AppConfig [EOL] [EOL] [EOL] class AmbientesConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
from django . contrib import admin [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
	0
	0
from typing import Type [EOL] import typing [EOL] import web [EOL] from rest_framework . serializers import ModelSerializer [EOL] from ambientes . models import AmbientesUnidadesEdu [EOL] [EOL] [EOL] class AmbientesSerializer ( ModelSerializer ) : [EOL] class Meta : [EOL] model = AmbientesUnidadesEdu [EOL] fields = ( [string] ) [EOL] filter_fields = ( [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[web.ambientes.api.serializers.AmbientesSerializer.Meta]$ 0 0 0 $builtins.str$ 0 0 0 0 0 $builtins.str$ 0 0 0 0 0
from typing import Any , Type [EOL] import typing [EOL] import web [EOL] from django . shortcuts import get_object_or_404 [EOL] from rest_framework . viewsets import ModelViewSet , ReadOnlyModelViewSet [EOL] from ambientes . models import AmbientesUnidadesEdu [EOL] from . serializers import AmbientesSerializer [EOL] from django_filters . rest_framework import DjangoFilterBackend [EOL] from rest_framework import filters [EOL] from rest_framework . response import Response [EOL] [EOL] [EOL] class AmbientesViewSet ( ReadOnlyModelViewSet ) : [EOL] [docstring] [EOL] queryset = AmbientesUnidadesEdu . objects . all ( ) [EOL] serializer_class = AmbientesSerializer [EOL] lookup_url_kwarg = [string] [EOL] [EOL] def retrieve ( self , request , * args , ** kwargs ) : [EOL] cd_esc = str ( kwargs . get ( [string] , None ) ) [EOL] queryset = AmbientesUnidadesEdu . objects . filter ( codesc = cd_esc ) [EOL] serializer = AmbientesSerializer ( queryset , many = True ) [EOL] return Response ( serializer . data ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[web.ambientes.api.viewsets.AmbientesViewSet]$ 0 0 0 0 0 0 0 0 0 $typing.Type[web.ambientes.api.serializers.AmbientesSerializer]$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 $web.ambientes.api.serializers.AmbientesSerializer$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 $web.ambientes.api.serializers.AmbientesSerializer$ 0 0 0 0
from django . apps import AppConfig [EOL] [EOL] [EOL] class PortalConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
from django . contrib import admin [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
	0
from django . db import models [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . test import TestCase [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
	0
from typing import Any , List , Dict [EOL] import typing [EOL] from django . shortcuts import render [EOL] from escolas . models import Escolas [EOL] from turmas . models import Turmas [EOL] from rest_framework . views import APIView [EOL] from django . db import connection [EOL] from rest_framework . response import Response [EOL] [EOL] [EOL] [comment] [EOL] [EOL] [EOL] class Ambientes ( APIView ) : [EOL] [EOL] def get ( self , request , codesc , format = None ) : [EOL] [docstring] [EOL] query = [string] . format ( codesc ) [EOL] [EOL] cursor = connection . cursor ( ) [EOL] cursor . execute ( query ) [EOL] modalidades = { [string] : [ dict ( zip ( [ column [ [number] ] for column in cursor . description ] , row ) ) for row in cursor . fetchall ( ) ] } [EOL] [EOL] return Response ( modalidades ) [EOL] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 $builtins.str$ 0 0 $typing.Dict[builtins.str,typing.List[typing.Dict[typing.Any,typing.Any]]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 $typing.Dict[builtins.str,typing.List[typing.Dict[typing.Any,typing.Any]]]$ 0 0 0
from typing import Any , List , Dict [EOL] import typing [EOL] from django . shortcuts import render [EOL] from escolas . models import Escolas [EOL] from turmas . models import Turmas [EOL] from rest_framework . views import APIView [EOL] from django . db import connection [EOL] from rest_framework . response import Response [EOL] [EOL] [EOL] [comment] [EOL] [EOL] [EOL] class ModalidadesPraticadas ( APIView ) : [EOL] [EOL] def get ( self , request , codesc , format = None ) : [EOL] [docstring] [EOL] query = [string] . format ( codesc ) [EOL] [EOL] cursor = connection . cursor ( ) [EOL] cursor . execute ( query ) [EOL] row = cursor . fetchall ( ) [EOL] modalidades = { [string] : [ mod [ [number] ] for mod in row ] } [EOL] [EOL] return Response ( modalidades ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 $builtins.str$ 0 0 $typing.Any$ 0 $typing.Any$ 0 0 0 0 0 $typing.Dict[builtins.str,typing.List[typing.Any]]$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 $typing.Dict[builtins.str,typing.List[typing.Any]]$ 0 0
from typing import Any , List , Dict [EOL] import typing [EOL] from rest_framework . views import APIView [EOL] from django . db import connection [EOL] from rest_framework . response import Response [EOL] [EOL] [EOL] [comment] [EOL] [EOL] [EOL] class TurmasSerieTurno ( APIView ) : [EOL] [EOL] def get ( self , request , codesc , format = None ) : [EOL] [docstring] [EOL] query = [string] . format ( codesc ) [EOL] [EOL] cursor = connection . cursor ( ) [EOL] cursor . execute ( query ) [EOL] modalidades = { [string] : [ dict ( zip ( [ column [ [number] ] for column in cursor . description ] , row ) ) for row in cursor . fetchall ( ) ] } [EOL] [EOL] return Response ( modalidades ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 $builtins.str$ 0 0 $typing.Dict[builtins.str,typing.List[typing.Dict[typing.Any,typing.Any]]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 $typing.Dict[builtins.str,typing.List[typing.Dict[typing.Any,typing.Any]]]$ 0 0
	0
	0
from django . apps import AppConfig [EOL] [EOL] [EOL] class AlunosConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
from django . shortcuts import render [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . test import TestCase [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . contrib import admin [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
	0
name = [string] [EOL] loglevel = [string] [EOL] errorlog = [string] [EOL] accesslog = [string] [EOL] workers = [number] [EOL]	$builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.int$ 0 0 0
from typing import Any [EOL] import typing [EOL] from portal . views . alunos_por_serie_turno import AlunosSerieTurno [EOL] from portal . views . ambientes import Ambientes [EOL] from portal . views . servidores_atuacao import ServidoresAtuacaoEscola [EOL] from portal . views . total_servidores_atuacao import TotalServidoresAtuacaoEscola [EOL] from portal . views . total_vagas_mat_serie import VagasMatriculasBySerie [EOL] from portal . views . turmas_serie_turno import TurmasSerieTurno [EOL] from rest_framework . test import APIRequestFactory [EOL] from django . test import SimpleTestCase , TestCase [EOL] from django . urls import reverse , resolve [EOL] [EOL] from portal . views . modalidades import ModalidadesPraticadas [EOL] from portal . views . total_servidores_escolaridade import ServidoresEscolarizacao [EOL] [EOL] [EOL] def resolve_by_name_and_escola094145 ( name , ** kwargs ) : [EOL] url = reverse ( name , kwargs = { [string] : [string] } ) [EOL] return resolve ( url ) [EOL] [EOL] [EOL] class PortalUrlsTestCase ( SimpleTestCase ) : [EOL] [EOL] def test_resolves_ModalidadesPraticadas_url ( self ) : [EOL] resolver = resolve_by_name_and_escola094145 ( [string] ) [EOL] self . assertEqual ( resolver . func . cls , ModalidadesPraticadas ) [EOL] [EOL] def test_resolves_VagasMatriculasBySerie_url ( self ) : [EOL] resolver = resolve_by_name_and_escola094145 ( [string] ) [EOL] self . assertEqual ( resolver . func . cls , VagasMatriculasBySerie ) [EOL] [EOL] def test_resolves_Ambientes_url ( self ) : [EOL] resolver = resolve_by_name_and_escola094145 ( [string] ) [EOL] self . assertEqual ( resolver . func . cls , Ambientes ) [EOL] [EOL] def test_resolves_ServidoresAtuacaoEscola_url ( self ) : [EOL] resolver = resolve_by_name_and_escola094145 ( [string] ) [EOL] self . assertEqual ( resolver . func . cls , ServidoresAtuacaoEscola ) [EOL] [EOL] def test_resolves_TotalServidoresAtuacaoEscola_url ( self ) : [EOL] resolver = resolve_by_name_and_escola094145 ( [string] ) [EOL] self . assertEqual ( resolver . func . cls , TotalServidoresAtuacaoEscola ) [EOL] [EOL] def test_resolves_ServidoresEscolarizacao_url ( self ) : [EOL] resolver = resolve_by_name_and_escola094145 ( [string] ) [EOL] self . assertEqual ( resolver . func . cls , ServidoresEscolarizacao ) [EOL] [EOL] def test_resolves_AlunosSerieTurno_url ( self ) : [EOL] resolver = resolve_by_name_and_escola094145 ( [string] ) [EOL] self . assertEqual ( resolver . func . cls , AlunosSerieTurno ) [EOL] [EOL] def test_resolves_TurmasSerieTurno_url ( self ) : [EOL] resolver = resolve_by_name_and_escola094145 ( [string] ) [EOL] self . assertEqual ( resolver . func . cls , TurmasSerieTurno ) [EOL] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0