[comment] [EOL] [EOL] [docstring] [EOL] [EOL] __author__ = [string] [EOL] __email__ = [string] [EOL] __version__ = [string] [EOL] [EOL] from . errs import errs , ErrorResult [EOL]	0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL] import builtins [EOL] from typing import Any [EOL] import errs [EOL] import typing [EOL] import traceback [EOL] import logging [EOL] from functools import wraps [EOL] [EOL] from typing import Any , Callable , Dict , Tuple , Union [EOL] [EOL] [docstring] [EOL] [EOL] [EOL] class ErrorResult ( object ) : [EOL] [docstring] [EOL] def __init__ ( self ) : [comment] [EOL] self . is_error = False [EOL] [EOL] def check ( self ) : [comment] [EOL] [docstring] [EOL] if self . is_error : [EOL] return True [EOL] return False [EOL] [EOL] [EOL] class NoError ( ErrorResult ) : [EOL] [docstring] [EOL] def __init__ ( self ) : [comment] [EOL] self . is_error = False [EOL] [EOL] [EOL] class Error ( ErrorResult ) : [EOL] [docstring] [EOL] def __init__ ( self , error ) : [comment] [EOL] self . is_error = True [EOL] self . traceback = traceback . format_exc ( ) [EOL] self . error = error [EOL] [EOL] [EOL] def errs ( func ) : [comment] [EOL] [docstring] [EOL] @ wraps ( func ) def wrapper ( * args , ** kwargs ) : [comment] [EOL] try : [EOL] out = func ( * args , ** kwargs ) [EOL] return out , NoError ( ) [EOL] except Exception as e : [EOL] err = Error ( e ) [EOL] logging . getLogger ( __name__ ) . error ( err . traceback ) [EOL] return None , err [EOL] return wrapper [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.Exception$ 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.Exception$ 0 $builtins.Exception$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL] [comment] [EOL] [EOL] [docstring] [EOL] [EOL] import pytest [EOL] [EOL] [EOL] from errs import errs , ErrorResult [EOL] [EOL] [EOL] def test_error_result_is_not_error ( ) : [EOL] assert ( ErrorResult ( ) . check ( ) is False ) [EOL] [EOL] [EOL] def test_no_error_return ( ) : [EOL] @ errs def return_me ( * args ) : [EOL] return args [EOL] out , err = return_me ( [number] , [number] , [number] ) [EOL] assert ( out == ( [number] , [number] , [number] ) ) [EOL] [EOL] [EOL] def test_no_error ( ) : [EOL] @ errs def no_raises ( ) : [EOL] return [number] [EOL] out , err = no_raises ( ) [EOL] assert ( err . check ( ) == False ) [EOL] [EOL] def test_error ( ) : [EOL] @ errs def raises ( ) : [EOL] raise Exception ( ) [EOL] return [number] [EOL] out , err = raises ( ) [EOL] assert ( err . check ( ) == True ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from errs import errs [EOL] [EOL] @ errs def raises ( ) : [comment] [EOL] raise Exception ( ) [EOL] return [number] [EOL] [EOL] def check_error ( ) : [comment] [EOL] out , err = raises ( ) [EOL] print ( [string] . format ( err . check ( ) ) ) [EOL] [EOL] if __name__ == [string] : [EOL] check_error ( ) [comment] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0