from typing import MutableMapping , Any [EOL] import typing [EOL] [docstring] [EOL] import importlib . resources [EOL] [EOL] import toml [EOL] [EOL] PYPROJECT = toml . loads ( importlib . resources . read_text ( [string] , [string] ) ) [EOL] [EOL] __authors__ = PYPROJECT [ [string] ] [ [string] ] [ [string] ] [EOL] __summary__ = PYPROJECT [ [string] ] [ [string] ] [ [string] ] [EOL] __title__ = PYPROJECT [ [string] ] [ [string] ] [ [string] ] [EOL] __url__ = PYPROJECT [ [string] ] [ [string] ] [ [string] ] [EOL] __version__ = PYPROJECT [ [string] ] [ [string] ] [ [string] ] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.MutableMapping[builtins.str,typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.MutableMapping[builtins.str,typing.Any]$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.MutableMapping[builtins.str,typing.Any]$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.MutableMapping[builtins.str,typing.Any]$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.MutableMapping[builtins.str,typing.Any]$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.MutableMapping[builtins.str,typing.Any]$ 0 0 0 0 0 0 0 0 0 0
	0
[comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] from typing import List , Any , Dict [EOL] import typing [EOL] import pathlib [EOL] from pathlib import Path [EOL] [EOL] BASE_DIR = Path ( __file__ ) . parent . resolve ( ) [EOL] ABOUT = { } [EOL] with open ( Path ( BASE_DIR , [string] , [string] , [string] ) ) as infile : [EOL] exec ( infile . read ( ) , ABOUT ) [EOL] [EOL] project = ABOUT [ [string] ] [EOL] copyright = [string] [EOL] author = [string] . join ( ABOUT [ [string] ] ) [EOL] [EOL] [comment] [EOL] release = ABOUT [ [string] ] [EOL] [EOL] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] extensions = [ [string] , [string] , [string] , [string] , [string] , [string] , [string] , ] [EOL] [EOL] [comment] [EOL] templates_path = [ [string] ] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] exclude_patterns = [ [string] , [string] , [string] ] [EOL] [EOL] master_doc = [string] [EOL] [EOL] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] html_theme = [string] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] html_static_path = [ ] [EOL] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [EOL] [comment] [EOL] intersphinx_mapping = { [string] : None } [EOL] [EOL] [comment] [EOL] [EOL] [comment] [EOL] todo_include_todos = True [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $pathlib.Path$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Dict[typing.Any,typing.Any]$ 0 0 0 0 0 0 0 0 0 $pathlib.Path$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Dict[typing.Any,typing.Any]$ 0 0 0 $typing.Any$ 0 $typing.Dict[typing.Any,typing.Any]$ 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 $typing.Dict[typing.Any,typing.Any]$ 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.Dict[typing.Any,typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Dict[builtins.str,None]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0
def test_nothing ( ) : [EOL] pass [EOL]	0 0 0 0 0 0 0 0