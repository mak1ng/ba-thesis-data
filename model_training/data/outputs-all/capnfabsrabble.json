[comment] [EOL] [comment] [EOL] [comment] [EOL]	0 0 0 0 0 0
from typing import Type , Any [EOL] import typing [EOL] import models [EOL] import datetime [EOL] [EOL] from flask_sqlalchemy import SQLAlchemy [EOL] [EOL] db = SQLAlchemy ( ) [EOL] [EOL] [EOL] def init_db ( ) : [EOL] import app [EOL] with app . create_app ( ) . app_context ( ) : [EOL] db . create_all ( ) [EOL] [EOL] [EOL] class Message ( db . Model ) : [EOL] msg_id = db . Column ( db . Integer , primary_key = True ) [EOL] content = db . Column ( db . Text , nullable = False ) [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] username = db . Column ( db . Text , nullable = False ) [EOL] [comment] [EOL] [comment] [EOL] when_created = db . Column ( db . DateTime , nullable = False , index = True , default = datetime . datetime . utcnow ( ) ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Type[models.Message]$ 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 $typing.Type[models.Message]$ 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[models.Message]$ 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[models.Message]$ 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import werkzeug [EOL] import models [EOL] import typing [EOL] import datetime [EOL] import flask [EOL] import datetime [EOL] [EOL] from flask import request , jsonify , Blueprint [EOL] [EOL] from models import db , Message [EOL] [EOL] blueprint = Blueprint ( [string] , __name__ , url_prefix = [string] ) [EOL] [EOL] DAWN_OF_TIME = datetime . datetime . min [EOL] [EOL] [EOL] @ blueprint . route ( [string] , methods = [ [string] ] ) def get_messages ( ) : [EOL] since = request . args . get ( [string] , DAWN_OF_TIME ) [EOL] [comment] [EOL] msgs = db . session . query ( Message ) . filter ( Message . when_created >= since ) . all ( ) [EOL] return jsonify ( { [string] : [ format_msg ( msg ) for msg in msgs ] } ) [EOL] [EOL] [EOL] @ blueprint . route ( [string] , methods = [ [string] ] ) def post_message ( ) : [EOL] obj = request . form [EOL] msg = Message ( content = obj [ [string] ] , username = obj [ [string] ] ) [EOL] db . session . add ( msg ) [EOL] [comment] [EOL] [comment] [EOL] db . session . commit ( ) [EOL] [comment] [EOL] return [string] , [number] [EOL] [EOL] [EOL] def format_msg ( msg ) : [EOL] return { [string] : msg . content , [string] : msg . username , [string] : msg . when_created . isoformat ( ) , } [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $flask.blueprints.Blueprint$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $datetime.datetime$ 0 0 0 0 0 0 0 0 0 0 $flask.blueprints.Blueprint$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $datetime.datetime$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $flask.blueprints.Blueprint$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import List [EOL] import typing [EOL] import flask [EOL] import random [EOL] [EOL] from flask import Blueprint , render_template [EOL] [EOL] blueprint = Blueprint ( [string] , __name__ ) [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] GENDER_NEUTRAL_NAMES = [ [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , ] [EOL] [EOL] [EOL] @ blueprint . route ( [string] , methods = [ [string] ] ) def get_index ( ) : [EOL] random_username = random . choice ( GENDER_NEUTRAL_NAMES ) [EOL] [EOL] return render_template ( [string] , random_username = random_username ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $flask.blueprints.Blueprint$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $flask.blueprints.Blueprint$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0
import flask [EOL] from flask import Flask [EOL] [EOL] [EOL] def create_app ( ) : [EOL] app = Flask ( __name__ ) [EOL] [EOL] app . config [ [string] ] = [string] [EOL] [comment] [EOL] [comment] [EOL] app . config [ [string] ] = False [EOL] [EOL] import models [EOL] models . db . init_app ( app ) [EOL] [EOL] import api [EOL] app . register_blueprint ( api . blueprint ) [EOL] [EOL] import frontend [EOL] app . register_blueprint ( frontend . blueprint ) [EOL] [EOL] return app [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL] from datetime import datetime [EOL] [EOL] from models import Message , db [EOL] [EOL] [EOL] def main ( ) : [EOL] import app [EOL] with app . create_app ( ) . app_context ( ) : [EOL] db . session . add ( Message ( content = [string] , username = [string] ) ) [EOL] db . session . add ( Message ( content = [string] , username = [string] ) ) [EOL] db . session . commit ( ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0