import builtins [EOL] from typing import Type , Tuple [EOL] import src [EOL] import typing [EOL] from itertools import chain [EOL] [EOL] class SolarSystem : [EOL] planets = [ list ( chain ( planet , ( index + [number] , ) ) ) for index , planet in enumerate ( ( ( [string] , [string] , [number] ) , ( [string] , [string] , [number] ) , ( [string] , [string] , [number] ) , ( [string] , [string] , [number] ) , ( [string] , [string] , [number] ) , ( [string] , [string] , [number] ) , ( [string] , [string] , [number] ) , ( [string] , [string] , [number] ) ) ) ] [EOL] [EOL] lines = ( [string] , [string] , [string] ) [EOL] [EOL] def __init__ ( self ) : [EOL] self . lineIndex = [number] [EOL] [EOL] def greet ( self ) : [EOL] self . planet = self . planets [ int ( Math . random ( ) * len ( self . planets ) ) ] [EOL] document . getElementById ( [string] ) . innerHTML = [string] . format ( self . planet [ [number] ] ) [EOL] self . explain ( ) [EOL] [EOL] def explain ( self ) : [EOL] document . getElementById ( [string] ) . innerHTML = ( self . lines [ self . lineIndex ] . format ( self . planet [ [number] ] , self . planet [ self . lineIndex + [number] ] ) ) [EOL] self . lineIndex = ( self . lineIndex + [number] ) % [number] [EOL] [EOL] [EOL] solarSystem = SolarSystem ( ) [EOL] [EOL] def init ( ) : [EOL] [comment] [EOL] console . log ( [string] ) [EOL] [EOL] [comment] [EOL] def event_listener ( event ) : [EOL] document . querySelector ( [string] ) . innerHTML = event . tabItem . getAttribute ( [string] ) ; [EOL] document . addEventListener ( [string] , event_listener ) ; [EOL] [EOL] document . querySelector ( [string] ) . innerHTML = [string] [EOL] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Tuple[builtins.str,builtins.str,builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL] [EOL] from typing import Iterator [EOL] import builtins [EOL] import typing [EOL] from typing import Iterator [EOL] [EOL] def fib ( n ) : [EOL] a , b = [number] , [number] [EOL] while a < n : [EOL] yield a [EOL] a , b = b , a + b [EOL] [EOL] [EOL] def test_nothing ( ) : [EOL] assert list ( fib ( [number] ) ) == [ [number] , [number] , [number] , [number] , [number] , [number] , [number] ] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Iterator[builtins.int]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0