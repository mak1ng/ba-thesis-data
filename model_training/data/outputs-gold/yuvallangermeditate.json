[comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [EOL] [docstring] [EOL] [EOL] from setuptools import setup [EOL] [EOL] [EOL] DESCRIPTION = [string] [EOL] LONG_DESCRIPTION = open ( [string] ) . read ( ) [EOL] [EOL] setup ( name = [string] , license = [string] , url = [string] , description = DESCRIPTION , long_description = LONG_DESCRIPTION , author = [string] , author_email = [string] , maintainer = [string] , maintainer_email = [string] , version = [string] , classifiers = [ [string] , [string] , [string] , [string] , ] , keywords = [string] , project_urls = { [string] : [string] , [string] : [string] , [string] : [string] , [string] : [string] , [string] : [string] , } , packages = [ [string] ] , entry_points = { [string] : [ [string] , ] , } , include_package_data = True , install_requires = [ [string] , [string] , [string] , [string] , ] , python_requires = [string] , ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[docstring] [EOL] [EOL] from hypothesis import given , reject [EOL] from hypothesis . strategies import integers , none , one_of [EOL] import hypothesis . strategies [EOL] [EOL] import meditate [EOL] [EOL] [EOL] def maybe_integers ( ) : [EOL] return one_of ( none ( ) , integers ( ) ) [EOL] [EOL] [EOL] @ given ( maybe_integers ( ) , maybe_integers ( ) , maybe_integers ( ) , ) def test_parse_duration_input ( hours , minutes , seconds , ) : [EOL] [docstring] [EOL] wanted_seconds = [number] [EOL] input_str = [string] [EOL] if hours is None : [EOL] hours = [number] [EOL] if minutes is None : [EOL] minutes = [number] [EOL] if seconds is None : [EOL] seconds = [number] [EOL] [EOL] input_str += f"{ hours } [string] " [EOL] input_str += f"{ minutes } [string] " [EOL] input_str += f"{ seconds } [string] " [EOL] [EOL] total_seconds = ( [number] * [number] * hours + [number] * minutes + seconds ) [EOL] [EOL] try : [EOL] assert meditate . parse_duration_input ( input_str = input_str , ) == total_seconds [EOL] except meditate . DurationConfigurationException as e : [EOL] reject ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0