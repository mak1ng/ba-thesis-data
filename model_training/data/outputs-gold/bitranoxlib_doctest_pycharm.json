import builtins [EOL] import pathlib [EOL] from . lib_doctest_pycharm import * [EOL] [EOL] [EOL] def get_version ( ) : [EOL] with open ( str ( pathlib . Path ( __file__ ) . parent / [string] ) , mode = [string] ) as version_file : [EOL] version = version_file . readline ( ) [EOL] return version [EOL] [EOL] [EOL] __title__ = [string] [EOL] __version__ = get_version ( ) [EOL] __name__ = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 $builtins.str$ 0 0 0
from typing import Optional [EOL] import typing [EOL] import builtins [EOL] import logging [EOL] import logging [EOL] import sys [EOL] logger = logging . getLogger ( ) [EOL] [EOL] [EOL] def setup_doctest_logger_for_pycharm ( log_level = logging . INFO ) : [EOL] [docstring] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] if is_pycharm_docrunner ( ) or is_pytest_py ( ) : [EOL] logger_add_streamhandler_to_sys_stdout ( ) [EOL] [comment] [EOL] logger . pycharm_doctest_logger_added = True [comment] [EOL] logging . getLogger ( ) . setLevel ( log_level ) [EOL] logging . getLogger ( [string] ) . setLevel ( log_level ) [EOL] elif is_pycharm_pytest_runner ( ) : [EOL] pass [EOL] [EOL] [EOL] def logger_add_streamhandler_to_sys_stdout ( ) : [EOL] if not is_doctest_stdout_handler_added ( ) : [EOL] console = logging . StreamHandler ( stream = sys . stdout ) [EOL] console . name = [string] [EOL] logging . getLogger ( ) . addHandler ( console ) [EOL] [EOL] [EOL] def is_doctest_stdout_handler_added ( ) : [EOL] [docstring] [EOL] for handler in logger . handlers : [EOL] if hasattr ( handler , [string] ) and hasattr ( handler , [string] ) : [EOL] if handler . stream == sys . stdout and handler . get_name ( ) == [string] : [comment] [EOL] return True [EOL] return False [EOL] [EOL] [EOL] def is_pycharm_docrunner ( ) : [EOL] if [string] in sys . argv [ [number] ] : [EOL] return True [EOL] else : [EOL] return False [EOL] [EOL] [EOL] def is_pycharm_pytest_runner ( ) : [EOL] if [string] in sys . argv [ [number] ] : [EOL] return True [EOL] else : [EOL] return False [EOL] [EOL] [EOL] def is_pytest_py ( ) : [EOL] if [string] in sys . argv [ [number] ] : [EOL] return True [EOL] else : [EOL] return False [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $None$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0