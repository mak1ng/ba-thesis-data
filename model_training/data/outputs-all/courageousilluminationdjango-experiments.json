from typing import List [EOL] import typing [EOL] [docstring] [EOL] from invoke import task , run [EOL] [EOL] PYTHON_MODULES = [ [string] ] [EOL] [EOL] [EOL] [comment] [EOL] @ task ( name = [string] ) def format_python ( ctx ) : [EOL] [docstring] [EOL] run ( [string] ) [EOL] run ( [string] ) [EOL] [EOL] [EOL] @ task ( name = [string] ) def lint_python ( ctx ) : [EOL] [docstring] [EOL] run ( [string] + [string] . join ( PYTHON_MODULES ) ) [EOL] run ( [string] ) [EOL] [EOL] [EOL] @ task ( name = [string] ) def test_python ( ctx ) : [EOL] [docstring] [EOL] run ( [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
import os [EOL] from setuptools import find_packages , setup [EOL] from pip . req import parse_requirements [EOL] [EOL] with open ( os . path . join ( os . path . dirname ( __file__ ) , [string] ) ) as readme : [EOL] README = readme . read ( ) [EOL] [EOL] [comment] [EOL] os . chdir ( os . path . normpath ( os . path . join ( os . path . abspath ( __file__ ) , os . pardir ) ) ) [EOL] [EOL] [EOL] setup ( name = [string] , version = [string] , packages = find_packages ( ) , include_package_data = True , description = [string] , long_description = README , author = [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0
[comment] [EOL] [EOL] import sys [EOL] import django [EOL] [EOL] from django . conf import settings [EOL] from django . core . management import call_command [EOL] [EOL] settings . configure ( DEBUG = True , INSTALLED_APPS = ( [string] , [string] , ) , ) [EOL] [EOL] django . setup ( ) [EOL] call_command ( [string] , [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[docstring] [EOL] from django . apps import AppConfig [EOL] [EOL] [EOL] class ExperimentsConfig ( AppConfig ) : [EOL] [docstring] [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
	0
	0
[docstring] [EOL] from django . test import TestCase [EOL] [EOL] class SimpleTestCase ( TestCase ) : [EOL] [docstring] [EOL] [EOL] def test_simple ( self ) : [EOL] [docstring] [EOL] self . assertEqual ( [number] + [number] , [number] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0