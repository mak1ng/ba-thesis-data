from typing import Any [EOL] import typing [EOL] from owlog . app import create_app [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] app = create_app ( ) [EOL] app . run ( host = [string] , port = [number] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0
	0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] from . model import db [EOL] [EOL] events = Blueprint ( [string] ) [EOL] [EOL] [EOL] @ events . listener ( [string] ) async def setup_connection ( app , loop ) : [EOL] await db . set_bind ( f"{ app . config [ [string] ] } [string] { app . config [ [string] ] }" ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Sanic [EOL] from . api import api [EOL] from . config import get_configuration_object [EOL] from . events import events [EOL] [EOL] [EOL] def create_app ( ) : [EOL] print ( __name__ ) [EOL] app = Sanic ( __name__ ) [EOL] app . config . from_object ( get_configuration_object ( ) ) [EOL] app . blueprint ( events ) [EOL] app . blueprint ( api ) [EOL] return app [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Optional , Union , Type [EOL] import typing [EOL] import web [EOL] import os [EOL] [EOL] [EOL] class BaseConfig : [EOL] DATABASE_URI = [string] [EOL] REDIS_HOST = [string] [EOL] REDIS_PORT = [number] [EOL] [EOL] [EOL] class DevelopmentConfig ( BaseConfig ) : [EOL] DATABASE_SERVER = [string] [EOL] DATABASE_NAME = [string] [EOL] REDIS_HOST = [string] [EOL] REDIS_PORT = [number] [EOL] [EOL] [EOL] class ProductionConfig ( BaseConfig ) : [EOL] DATABASE_SERVER = [string] [EOL] DATABASE_NAME = [string] [EOL] REDIS_HOST = [string] [EOL] REDIS_PORT = [number] [EOL] [EOL] class TestingConfig ( BaseConfig ) : [EOL] DATABASE_PROTOCOL = [string] [EOL] DATABASE_URI = [string] [EOL] DATABASE_SERVER = f'{ DATABASE_PROTOCOL } [string] { DATABASE_URI }' [EOL] DATABASE_NAME = [string] [EOL] REDIS_HOST = [string] [EOL] REDIS_PORT = [number] [EOL] [EOL] [EOL] def get_configuration_object ( ) : [EOL] config_name = os . getenv ( [string] ) [EOL] config = { [string] : ProductionConfig , [string] : TestingConfig } . get ( config_name , DevelopmentConfig ) [EOL] return config ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import List [EOL] import typing [EOL] from . user import User [EOL] from . access_token import AccessToken [EOL] from . db import db [EOL] [EOL] __all__ = [ [string] , [string] , [string] ] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0
from typing import Type [EOL] import typing [EOL] import web [EOL] from . db import db [EOL] from uuid import uuid4 [EOL] [EOL] [EOL] class AccessToken ( db . Model ) : [EOL] __tablename__ = [string] [EOL] id = db . Column ( db . Integer , primary_key = True ) [EOL] token = db . Column ( db . String ( [number] ) , unique = True , nullable = False , default = uuid4 ( ) . hex ) [EOL] user_id = db . Column ( db . Integer , db . ForeignKey ( [string] , onupdate = [string] , ondelete = [string] ) ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $typing.Type[web.app.owlog.app.model.access_token.AccessToken]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[web.app.owlog.app.model.access_token.AccessToken]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[web.app.owlog.app.model.access_token.AccessToken]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from gino import Gino [EOL] [EOL] db = Gino ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] from . v1 import bp as v1_bp [EOL] [EOL] [EOL] api = Blueprint . group ( v1_bp , url_prefix = [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] from sanic import response [EOL] from owlog . app . model import User [EOL] [EOL] user = Blueprint ( [string] , url_prefix = [string] ) [EOL] [EOL] [EOL] @ user . route ( [string] , methods = [ [string] ] ) async def test ( request ) : [EOL] data = request . json [EOL] name = data . get ( [string] ) [EOL] u1 = await User . create ( name = name ) [EOL] return response . json ( { [string] : [string] } , status = [number] ) [EOL] [EOL] [EOL] @ user . route ( [string] ) async def test_api ( request ) : [EOL] return response . json ( { [string] : [string] } , status = [number] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] from sanic . response import json [EOL] [EOL] [EOL] signin = Blueprint ( [string] , url_prefix = [string] ) [EOL] [EOL] [EOL] @ signin . route ( [string] ) async def test ( request ) : [EOL] return json ( { [string] : [string] } ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] from . user import user [EOL] from . signin import signin [EOL] [EOL] [EOL] bp = Blueprint . group ( user , signin , url_prefix = [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] import pytest [EOL] from owlog . app import create_app [EOL] from owlog . app . config import TestingConfig [EOL] from sqlalchemy import create_engine [EOL] from owlog . app . model import db [EOL] [EOL] [EOL] @ pytest . fixture ( scope = [string] ) def app ( request ) : [EOL] app = create_app ( ) [EOL] return app [EOL] [EOL] [EOL] @ pytest . fixture def sanic_server ( loop , app , test_server ) : [EOL] print ( [string] , loop , [string] , app , [string] , test_server ) [EOL] return loop . run_until_complete ( test_server ( app ) ) [EOL] [EOL] [EOL] @ pytest . fixture ( scope = [string] ) def db_setup ( ) : [EOL] testing_config = TestingConfig ( ) [EOL] server = testing_config . DATABASE_URI [EOL] database_name = testing_config . DATABASE_NAME [EOL] engine = create_engine ( f' [string] { server }' ) [EOL] conn = engine . connect ( ) [EOL] try : [EOL] conn . execution_options ( isolation_level = [string] ) . execute ( f" [string] { database_name }" ) [EOL] except Exception : [EOL] pass [EOL] rv = create_engine ( f' [string] { server } [string] { database_name }' ) [EOL] [EOL] db . create_all ( rv ) [EOL] yield rv [EOL] [EOL] db . drop_all ( rv ) [EOL] rv . dispose ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
import pytest [EOL] [EOL] [EOL] @ pytest . mark . usefixtures ( [string] ) async def test_fixture_test_client_get ( app , sanic_server ) : [EOL] [docstring] [EOL] print ( app ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0