	0
import builtins [EOL] import os [EOL] from dataclasses import dataclass [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class Config : [EOL] env = ... [EOL] SERVICE_NAME = [string] [EOL] DEBUG = [string] == os . getenv ( [string] , [string] ) . lower ( ) [EOL] TESTING = False [EOL] HOST = os . getenv ( [string] , [string] ) [EOL] PORT = int ( os . getenv ( [string] , [number] ) ) [EOL] [comment] [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class Development ( Config ) : [EOL] DEBUG = False [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class Testing ( Config ) : [EOL] TESTING = True [EOL] [comment] [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class Production ( Config ) : [EOL] DEBUG = False [EOL] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0
from typing import Dict , Type , Any [EOL] import sanic [EOL] import box [EOL] import builtins [EOL] import typing [EOL] from sanic import Sanic [EOL] from sanic . request import Request [EOL] from sanic . response import text [EOL] [EOL] from box . conf import Config , Testing , Development , Production [EOL] from box . routes import api_v1 [EOL] from box . routes . middlewares import set_security_headers [EOL] [EOL] BEFORE_RESPONSE = [string] [EOL] PING = [string] [EOL] [EOL] [EOL] def init_config ( env = [string] ) : [EOL] mapping = { [string] : Config , [string] : Testing , [string] : Development , [string] : Production , } [EOL] config = mapping [ env ] ( env = env ) [EOL] check_env_type ( config ) [EOL] [EOL] return config [EOL] [EOL] [EOL] def check_env_type ( config ) : [EOL] if config . env == [string] and config . DEBUG : [EOL] raise RuntimeError ( [string] ) [EOL] [EOL] [EOL] def init_middleware ( app ) : [EOL] app . register_middleware ( set_security_headers , BEFORE_RESPONSE ) [EOL] [EOL] [EOL] def init_blueprints ( app ) : [EOL] app . blueprint ( api_v1 ) [EOL] [EOL] [EOL] def create_app ( ) : [EOL] app_ = Sanic ( __name__ ) [EOL] [EOL] app_ . config . from_object ( init_config ( ) ) [EOL] init_middleware ( app_ ) [EOL] init_blueprints ( app_ ) [EOL] [EOL] @ app_ . route ( [string] ) def ping ( _ ) : [EOL] return text ( PING , [number] ) [EOL] [EOL] return app_ [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 $box.conf.Config$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $None$ 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 $None$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $sanic.Sanic$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0
import asyncio [EOL] import uvloop [EOL] [EOL] from box . app import create_app [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] asyncio . set_event_loop_policy ( uvloop . EventLoopPolicy ( ) ) [EOL] [EOL] app = create_app ( ) [EOL] [EOL] app . run ( host = app . config . HOST , port = app . config . PORT , debug = app . config . DEBUG , auto_reload = False , ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
import sanic [EOL] from sanic . response import HTTPResponse [EOL] from sanic . request import Request [EOL] [EOL] [EOL] async def set_security_headers ( request , response ) : [EOL] try : [EOL] response . headers [ [string] ] = [string] [EOL] response . headers [ [string] ] = [string] [EOL] finally : [EOL] return response [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $sanic.response.HTTPResponse$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] [EOL] [EOL] article_bp = Blueprint ( [string] , url_prefix = [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] [EOL] [EOL] auth_bp = Blueprint ( [string] , url_prefix = [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] [EOL] from . auth import auth_bp [EOL] from . user_info import user_bp [EOL] from . article import article_bp [EOL] [EOL] [EOL] api_v1 = Blueprint . group ( auth_bp , user_bp , article_bp , url_prefix = [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] from sanic import Blueprint [EOL] [EOL] [EOL] user_bp = Blueprint ( [string] , url_prefix = [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0
	0
from dataclasses import dataclass [EOL] from datetime import datetime [EOL] from typing import Optional [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class Credential : [EOL] access_token = ... [EOL] refresh_token = ... [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class UserAccount : [EOL] email = ... [EOL] password = ... [EOL] age = ... [EOL] image_path = ... [EOL] birthday = ... [EOL] name = ... [EOL] bio = ... [EOL] credential = ... [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.int$ 0 0 0 $typing.Optional[builtins.str]$ 0 0 0 $typing.Optional[datetime.datetime]$ 0 0 0 $builtins.str$ 0 0 0 $typing.Optional[builtins.str]$ 0 0 0 $typing.Optional[Credential]$ 0 0 0
from __future__ import annotations [EOL] from dataclasses import dataclass [EOL] from typing import Optional , Union [EOL] [EOL] from box . entities . article import UserAccount [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class Article : [EOL] id = ... [EOL] author = ... [EOL] description = ... [EOL] like_count = ... [EOL] file_path = ... [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class Post ( Article ) : [EOL] title = ... [EOL] summary = ... [EOL] shared_count = ... [EOL] [EOL] [EOL] @ dataclass ( frozen = True ) class Comment ( Article ) : [EOL] root = ... [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $typing.Optional[box.entities.article.UserAccount]$ 0 0 0 $builtins.str$ 0 0 0 $builtins.int$ 0 0 0 $typing.Optional[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $typing.Optional[builtins.str]$ 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Union[Post,Comment]$ 0 0 0
	0
	0
	0
	0
	0