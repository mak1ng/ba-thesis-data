[comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] from __future__ import ( absolute_import , division , print_function ) [EOL] [EOL] [comment] [EOL] import os [EOL] [EOL] [comment] [EOL] from ranger . api . commands import Command [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] class my_edit ( Command ) : [EOL] [comment] [EOL] [comment] [EOL] [docstring] [EOL] [EOL] [comment] [EOL] def execute ( self ) : [EOL] [comment] [EOL] [comment] [EOL] if self . arg ( [number] ) : [EOL] [comment] [EOL] target_filename = self . rest ( [number] ) [EOL] else : [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] target_filename = self . fm . thisfile . path [EOL] [EOL] [comment] [EOL] self . fm . notify ( [string] + target_filename + [string] ) [EOL] [EOL] [comment] [EOL] if not os . path . exists ( target_filename ) : [EOL] self . fm . notify ( [string] , bad = True ) [EOL] return [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] self . fm . edit_file ( target_filename ) [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] def tab ( self , tabnum ) : [EOL] [comment] [EOL] [comment] [EOL] return self . _tab_directory_content ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from ranger . gui . colorscheme import ColorScheme [EOL] from ranger . gui . color import * [EOL] [EOL] class base ( ColorScheme ) : [EOL] progress_bar_color = [number] [EOL] [EOL] def use ( self , context ) : [EOL] fg , bg , attr = default_colors [EOL] [EOL] if context . reset : [EOL] return default_colors [EOL] [EOL] elif context . in_browser : [EOL] if context . selected : [EOL] attr = reverse [EOL] else : [EOL] attr = normal [EOL] if context . empty or context . error : [EOL] fg = [number] [EOL] bg = [number] [EOL] if context . border : [EOL] fg = default [EOL] if context . image : [EOL] fg = [number] [EOL] if context . video : [EOL] fg = [number] [EOL] if context . audio : [EOL] fg = [number] [EOL] if context . document : [EOL] fg = [number] [EOL] if context . container : [EOL] attr |= bold [EOL] fg = [number] [EOL] if context . directory : [EOL] attr |= bold [EOL] fg = [number] [EOL] elif context . executable and not any ( ( context . media , context . container , context . fifo , context . socket ) ) : [EOL] attr |= curses . A_ITALIC [EOL] fg = [number] [EOL] if context . socket : [EOL] fg = [number] [EOL] if context . fifo or context . device : [EOL] fg = [number] [EOL] if context . device : [EOL] attr |= underline [EOL] if context . link : [EOL] fg = context . good and [number] [EOL] bg = [number] [EOL] if context . bad : [EOL] fg = [number] [EOL] if context . tag_marker and not context . selected : [EOL] attr |= bold [EOL] if fg in ( [number] , [number] ) : [EOL] fg = [number] [EOL] else : [EOL] fg = [number] [EOL] if not context . selected and ( context . cut or context . copied ) : [EOL] fg = [number] [EOL] bg = [number] [EOL] if context . main_column : [EOL] if context . selected : [EOL] attr |= bold [EOL] if context . marked : [EOL] attr |= bold [EOL] fg = [number] [EOL] if context . badinfo : [EOL] if attr & reverse : [EOL] bg = [number] [EOL] else : [EOL] fg = [number] [EOL] [EOL] elif context . in_titlebar : [EOL] attr |= bold [EOL] if context . hostname : [EOL] fg = [number] [EOL] elif context . directory : [EOL] fg = [number] [EOL] elif context . tab : [EOL] if context . good : [EOL] fg = [number] [EOL] elif context . link : [EOL] fg = [number] [EOL] [EOL] elif context . in_statusbar : [EOL] if context . permissions : [EOL] if context . good : [EOL] fg = [number] [EOL] elif context . bad : [EOL] fg = [number] [EOL] if context . marked : [EOL] attr |= bold | reverse [EOL] fg = [number] [EOL] if context . message : [EOL] if context . bad : [EOL] attr |= bold [EOL] fg = [number] [EOL] if context . loaded : [EOL] bg = self . progress_bar_color [EOL] if context . vcsinfo : [EOL] fg = [number] [EOL] attr &= ~ bold [EOL] if context . vcscommit : [EOL] fg = [number] [EOL] attr &= ~ bold [EOL] [EOL] [EOL] if context . text : [EOL] if context . highlight : [EOL] attr |= reverse [EOL] [EOL] if context . in_taskview : [EOL] if context . title : [EOL] fg = [number] [EOL] [EOL] if context . selected : [EOL] attr |= reverse [EOL] [EOL] if context . loaded : [EOL] if context . selected : [EOL] fg = self . progress_bar_color [EOL] else : [EOL] bg = self . progress_bar_color [EOL] [EOL] [EOL] if context . vcsfile and not context . selected : [EOL] attr &= ~ bold [EOL] if context . vcsconflict : [EOL] fg = [number] [EOL] elif context . vcschanged : [EOL] fg = [number] [EOL] elif context . vcsunknown : [EOL] fg = [number] [EOL] elif context . vcsstaged : [EOL] fg = [number] [EOL] elif context . vcssync : [EOL] fg = [number] [EOL] elif context . vcsignored : [EOL] fg = [number] [EOL] [EOL] elif context . vcsremote and not context . selected : [EOL] attr &= ~ bold [EOL] if context . vcssync : [EOL] fg = [number] [EOL] elif context . vcsbehind : [EOL] fg = [number] [EOL] elif context . vcsahead : [EOL] fg = [number] [EOL] elif context . vcsdiverged : [EOL] fg = [number] [EOL] elif context . vcsunknown : [EOL] fg = [number] [EOL] [EOL] return fg , bg , attr	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 $builtins.int$ 0 $builtins.int$ 0 0
	0