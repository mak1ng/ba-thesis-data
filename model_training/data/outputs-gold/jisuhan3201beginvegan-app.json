	0
	0
from typing import Tuple , Union [EOL] import typing [EOL] __version__ = [string] [EOL] __version_info__ = tuple ( [ int ( num ) if num . isdigit ( ) else num for num in __version__ . replace ( [string] , [string] , [number] ) . split ( [string] ) ] ) [EOL]	0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $typing.Tuple[typing.Union[builtins.int,builtins.str],...]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Type [EOL] import beginvegan_app [EOL] import typing [EOL] from django . db import models [EOL] [EOL] [comment] [EOL] class TimeStampedModel ( models . Model ) : [EOL] [EOL] created_at = models . DateTimeField ( auto_now_add = True , null = True ) [EOL] updated_at = models . DateTimeField ( auto_now = True , null = True ) [EOL] [EOL] class Meta : [EOL] abstract = True [EOL] [EOL] [EOL] class MaterialCategory ( TimeStampedModel ) : [EOL] [EOL] name = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] sub_category = models . ForeignKey ( [string] , on_delete = models . SET_NULL , null = True ) [EOL] [EOL] def __str__ ( self ) : [EOL] return [string] . format ( self . name ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL] [EOL] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [EOL] class Material ( TimeStampedModel ) : [EOL] [EOL] name = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] eng_name = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] code = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] code_name = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] is_use = models . BooleanField ( default = False ) [EOL] raw_last_update = models . DateTimeField ( null = True , blank = True ) [EOL] category = models . ForeignKey ( MaterialCategory , on_delete = models . SET_NULL , null = True , related_name = [string] ) [EOL] [EOL] def __str__ ( self ) : [EOL] return [string] . format ( self . name ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL] [EOL] [EOL] class VegetarianStage ( TimeStampedModel ) : [EOL] [EOL] stage = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] materials = models . ManyToManyField ( Material ) [EOL] [EOL] def __str__ ( self ) : [EOL] return [string] . format ( self . stage ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.TimeStampedModel]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.TimeStampedModel]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.MaterialCategory]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.MaterialCategory]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.Material]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.Material]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.Material]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.Material]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.Material]$ 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.Material]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.Material]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.VegetarianStage]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.materials.models.VegetarianStage]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
from django . apps import AppConfig [EOL] [EOL] [EOL] class MaterialsConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
from django . test import TestCase [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from django . shortcuts import render [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
	0
	0
from django . apps import AppConfig [EOL] [EOL] [EOL] class ProductsConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
from django . test import TestCase [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
import builtins [EOL] from typing import Tuple , List , Union , Type [EOL] import beginvegan_app [EOL] import typing [EOL] from django . contrib import admin [EOL] from . import models [EOL] from django . utils . html import format_html [EOL] [EOL] def get_picture_preview ( obj ) : [EOL] [EOL] return format_html ( [string] . format ( obj . image . url ) ) [EOL] [EOL] [EOL] [comment] [EOL] class ProductImageAdmin ( admin . StackedInline ) : [EOL] model = models . ProductImage [EOL] extra = [number] [EOL] fields = [ get_picture_preview ] [EOL] readonly_fields = [ get_picture_preview ] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] class ProductMaterialAdmin ( admin . StackedInline ) : [EOL] model = models . ProductMaterial [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [EOL] [EOL] class RemoveMaterialAdmin ( admin . StackedInline ) : [EOL] model = models . RemoveMaterial [EOL] [EOL] [EOL] @ admin . register ( models . Product ) class ProductAdmin ( admin . ModelAdmin ) : [EOL] [EOL] list_display = ( [string] , [string] , [string] , [string] , [string] , [string] ) [EOL] search_fields = [ [string] ] [EOL] inlines = [ ProductImageAdmin , ProductMaterialAdmin , RemoveMaterialAdmin ] [EOL] [EOL] [EOL] @ admin . register ( models . ProductCategory ) class ProductCategoryAdmin ( admin . ModelAdmin ) : [EOL] [EOL] list_display = ( [string] , [string] , [string] , [string] , [string] ) [EOL] [EOL] [EOL] @ admin . register ( models . Company ) class CompanyAdmin ( admin . ModelAdmin ) : [EOL] [EOL] list_display = ( [string] , [string] , [string] , [string] ) [EOL] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.ProductMaterial]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.RemoveMaterial]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 $typing.List[typing.Type[typing.Union[beginvegan_app.products.admin.ProductImageAdmin,beginvegan_app.products.admin.ProductMaterialAdmin,beginvegan_app.products.admin.RemoveMaterialAdmin]]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Tuple[builtins.str,builtins.str,builtins.str,builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0
	0
from django . shortcuts import render [EOL] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0
from typing import Type [EOL] import beginvegan_app [EOL] import typing [EOL] from django . db import models [EOL] from beginvegan_app . materials import models as material_models [EOL] from django . utils . html import format_html [EOL] [EOL] [comment] [EOL] class TimeStampedModel ( models . Model ) : [EOL] [EOL] created_at = models . DateTimeField ( auto_now_add = True , null = True ) [EOL] updated_at = models . DateTimeField ( auto_now = True , null = True ) [EOL] [EOL] class Meta : [EOL] abstract = True [EOL] [EOL] class ProductCategory ( TimeStampedModel ) : [EOL] [EOL] name = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] sub_category = models . ForeignKey ( [string] , on_delete = models . SET_NULL , null = True ) [EOL] [EOL] def __str__ ( self ) : [EOL] return [string] . format ( self . name ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [EOL] class Company ( TimeStampedModel ) : [EOL] [EOL] name = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] [EOL] def __str__ ( self ) : [EOL] return [string] . format ( self . name ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL] [EOL] [EOL] class Product ( TimeStampedModel ) : [EOL] [EOL] name = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] category = models . ForeignKey ( ProductCategory , on_delete = models . SET_NULL , null = True , blank = True , related_name = [string] ) [EOL] materials = models . ManyToManyField ( material_models . Material , through = [string] , related_name = [string] ) [EOL] company = models . ForeignKey ( Company , on_delete = models . SET_NULL , null = True , blank = True , related_name = [string] ) [EOL] remove_materials = models . ManyToManyField ( material_models . Material , through = [string] , related_name = [string] ) [EOL] [EOL] def __str__ ( self ) : [EOL] return [string] . format ( self . name ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL] [EOL] [EOL] class ProductMaterial ( TimeStampedModel ) : [EOL] [EOL] product = models . ForeignKey ( Product , on_delete = models . CASCADE , related_name = [string] ) [EOL] material = models . ForeignKey ( material_models . Material , on_delete = models . CASCADE , related_name = [string] ) [EOL] [EOL] def __str__ ( self ) : [EOL] return [string] . format ( self . product , self . material ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL] [EOL] [EOL] class RemoveMaterial ( TimeStampedModel ) : [EOL] [EOL] product = models . ForeignKey ( Product , on_delete = models . CASCADE , related_name = [string] ) [EOL] material = models . ForeignKey ( material_models . Material , on_delete = models . CASCADE , related_name = [string] ) [EOL] [EOL] def __str__ ( self ) : [EOL] return [string] . format ( self . product , self . material ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL] [EOL] class ProductImage ( TimeStampedModel ) : [EOL] [EOL] title = models . CharField ( max_length = [number] , null = True , blank = True ) [EOL] image = models . ImageField ( upload_to = [string] , null = True , blank = True ) [EOL] product = models . ForeignKey ( Product , on_delete = models . SET_NULL , null = True , blank = True ) [EOL] [EOL] class Meta : [EOL] db_table = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.TimeStampedModel]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.TimeStampedModel]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.ProductCategory]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.ProductCategory]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.Company]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.Product]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.Product]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.Product]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.Product]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.Product]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.ProductMaterial]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.ProductMaterial]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.RemoveMaterial]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.RemoveMaterial]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.ProductImage]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.ProductImage]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[beginvegan_app.products.models.ProductImage]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
[comment] [EOL] [EOL] from typing import Tuple , List [EOL] import typing [EOL] from django . db import migrations , models [EOL] [EOL] [EOL] class Migration ( migrations . Migration ) : [EOL] [EOL] dependencies = [ ( [string] , [string] ) , ] [EOL] [EOL] operations = [ migrations . CreateModel ( name = [string] , fields = [ ( [string] , models . AutoField ( auto_created = True , primary_key = True , serialize = False , verbose_name = [string] ) ) , ( [string] , models . DateTimeField ( auto_now_add = True , null = True ) ) , ( [string] , models . DateTimeField ( auto_now = True , null = True ) ) , ( [string] , models . CharField ( blank = True , max_length = [number] , null = True ) ) , ( [string] , models . ImageField ( blank = True , null = True , upload_to = [string] ) ) , ] , options = { [string] : [string] , } , ) , ] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Tuple[builtins.str,builtins.str]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL] [EOL] from typing import Tuple , List [EOL] import typing [EOL] from django . db import migrations [EOL] [EOL] [EOL] class Migration ( migrations . Migration ) : [EOL] [EOL] dependencies = [ ( [string] , [string] ) , ] [EOL] [EOL] operations = [ migrations . RemoveField ( model_name = [string] , name = [string] , ) , ] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Tuple[builtins.str,builtins.str]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
[docstring] [EOL]	0 0
[docstring] [EOL]	0 0
[docstring] [EOL]	0 0
	0
import django [EOL] import pytest [EOL] from django . conf import settings [EOL] [EOL] pytestmark = pytest . mark . django_db [EOL] [EOL] [EOL] def test_user_get_absolute_url ( user ) : [EOL] assert user . get_absolute_url ( ) == f" [string] { user . username } [string] " [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
	0