[EOL] major = [number] [EOL] minor = [number] [EOL] patch = [number] [EOL]	0 $builtins.int$ 0 0 0 $builtins.int$ 0 0 0 $builtins.int$ 0 0 0
[comment] [EOL] [comment] [EOL] [EOL] from typing import List [EOL] import typing [EOL] from setuptools import setup [EOL] [EOL] with open ( [string] ) as readme_file : [EOL] readme = readme_file . read ( ) [EOL] [EOL] with open ( [string] ) as history_file : [EOL] history = history_file . read ( ) [EOL] [EOL] requirements = [ [string] , ] [EOL] [EOL] test_requirements = [ [string] , [string] , [string] , [string] , [string] , ] [EOL] [EOL] dev_requirements = [ [string] , [string] , [string] , [string] , [string] , ] [EOL] [EOL] setup ( name = [string] , version = [string] , description = [string] , long_description = readme + [string] + history , author = [string] , author_email = [string] , url = [string] , packages = [ [string] , ] , package_dir = { [string] : [string] } , include_package_data = True , install_requires = requirements , license = [string] , zip_safe = False , keywords = [string] , classifiers = [ [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , ] , setup_requires = [ [string] ] , test_suite = [string] , tests_require = test_requirements , extras_require = { [string] : test_requirements , [string] : dev_requirements , } , ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0
from typing import List , Dict [EOL] import typing [EOL] __config_version__ = [number] [EOL] [EOL] [EOL] GLOBALS = { [string] : [string] , } [EOL] [EOL] [EOL] FILES = [ [string] , [string] ] [EOL] [EOL] VERSION = [ [string] , [string] , [string] ] [EOL]	0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 $typing.Dict[builtins.str,builtins.str]$ 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0
[comment] [EOL]	0 0
[comment] [EOL] [EOL] __author__ = [string] [EOL] __email__ = [string] [EOL] __version__ = [string] [EOL]	0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0
[comment] [EOL] [comment] [EOL] [EOL] [docstring] [EOL] [EOL] import pytest [EOL] [EOL] [EOL] from rednecklock import rednecklock [EOL] [EOL] [EOL] @ pytest . fixture def response ( ) : [EOL] [docstring] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [EOL] def test_content ( response ) : [EOL] [docstring] [EOL] [comment] [EOL] [comment] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0