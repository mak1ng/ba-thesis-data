from setuptools import setup [EOL] [EOL] setup ( name = [string] , version = [string] , url = [string] , packages = [ ] , setup_requires = [ [string] ] , tests_require = [ [string] ] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[docstring] [EOL]	0 0
import re [EOL] import sys [EOL] [EOL] [EOL] MODULE_REGEX = [string] [EOL] [EOL] module_name = [string] [EOL] [EOL] if not re . match ( MODULE_REGEX , module_name ) : [EOL] print ( [string] % module_name ) [EOL] [EOL] [comment] [EOL] sys . exit ( [number] ) [EOL]	0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 $builtins.str$ 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Dict , Any [EOL] import datetime [EOL] import typing [EOL] from contextlib import contextmanager [EOL] import shlex [EOL] import os [EOL] import subprocess [EOL] import yaml [EOL] import datetime [EOL] from cookiecutter . utils import rmtree [EOL] [EOL] [EOL] @ contextmanager def inside_dir ( dirpath ) : [EOL] [docstring] [EOL] old_path = os . getcwd ( ) [EOL] try : [EOL] os . chdir ( dirpath ) [EOL] yield [EOL] finally : [EOL] os . chdir ( old_path ) [EOL] [EOL] [EOL] @ contextmanager def bake_in_temp_dir ( cookies , * args , ** kwargs ) : [EOL] [docstring] [EOL] result = cookies . bake ( * args , ** kwargs ) [EOL] try : [EOL] yield result [EOL] finally : [EOL] rmtree ( str ( result . project ) ) [EOL] [EOL] [EOL] def run_inside_dir ( command , dirpath ) : [EOL] [docstring] [EOL] with inside_dir ( dirpath ) : [EOL] return subprocess . check_call ( shlex . split ( command ) ) [EOL] [EOL] [EOL] def check_output_inside_dir ( command , dirpath ) : [EOL] [docstring] [EOL] with inside_dir ( dirpath ) : [EOL] return subprocess . check_output ( shlex . split ( command ) ) [EOL] [EOL] [EOL] def test_year_compute_in_license_file ( cookies ) : [EOL] with bake_in_temp_dir ( cookies ) as result : [EOL] license_file_path = result . project . join ( [string] ) [EOL] now = datetime . datetime . now ( ) [EOL] assert str ( now . year ) in license_file_path . read ( ) [EOL] [EOL] [EOL] def project_info ( result ) : [EOL] [docstring] [EOL] project_path = str ( result . project ) [EOL] project_slug = os . path . split ( project_path ) [ - [number] ] [EOL] project_dir = os . path . join ( project_path , project_slug ) [EOL] return project_path , project_slug , project_dir [EOL] [EOL] [EOL] def test_bake_with_defaults ( cookies ) : [EOL] with bake_in_temp_dir ( cookies ) as result : [EOL] assert result . project . isdir ( ) [EOL] assert result . exit_code == [number] [EOL] assert result . exception is None [EOL] [EOL] found_toplevel_files = [ f . basename for f in result . project . listdir ( ) ] [EOL] assert [string] in found_toplevel_files [EOL] assert [string] in found_toplevel_files [EOL] assert [string] in found_toplevel_files [EOL] assert [string] in found_toplevel_files [EOL] assert [string] in found_toplevel_files [EOL] assert [string] in found_toplevel_files [EOL] [EOL] [EOL] def test_bake_and_run_tests ( cookies ) : [EOL] with bake_in_temp_dir ( cookies ) as result : [EOL] assert result . project . isdir ( ) [EOL] run_inside_dir ( [string] , str ( result . project ) ) == [number] [EOL] print ( [string] , str ( result . project ) ) [EOL] [EOL] [EOL] def test_bake_withspecialchars_and_run_tests ( cookies ) : [EOL] [docstring] [EOL] with bake_in_temp_dir ( cookies , extra_context = { [string] : [string] } ) as result : [EOL] assert result . project . isdir ( ) [EOL] run_inside_dir ( [string] , str ( result . project ) ) == [number] [EOL] [EOL] [EOL] def test_bake_with_apostrophe_and_run_tests ( cookies ) : [EOL] [docstring] [EOL] with bake_in_temp_dir ( cookies , extra_context = { [string] : [string] } ) as result : [EOL] assert result . project . isdir ( ) [EOL] run_inside_dir ( [string] , str ( result . project ) ) == [number] [EOL] [EOL] [EOL] def test_bake_without_author_file ( cookies ) : [EOL] with bake_in_temp_dir ( cookies , extra_context = { [string] : [string] } ) as result : [EOL] found_toplevel_files = [ f . basename for f in result . project . listdir ( ) ] [EOL] assert [string] not in found_toplevel_files [EOL] [comment] [EOL] manifest_path = result . project . join ( [string] ) [EOL] with open ( str ( manifest_path ) ) as manifest_file : [EOL] bdy = manifest_file . read ( ) [EOL] print ( bdy ) [EOL] assert [string] not in bdy [EOL] [EOL] [EOL] def test_bake_selecting_license ( cookies ) : [EOL] license_strings = { [string] : [string] , [string] : [string] , [string] : [string] , [string] : [string] , [string] : [string] , } [EOL] for license , target_string in license_strings . items ( ) : [EOL] with bake_in_temp_dir ( cookies , extra_context = { [string] : license } ) as result : [EOL] assert target_string in result . project . join ( [string] ) . read ( ) [EOL] assert license in result . project . join ( [string] ) . read ( ) [EOL] [EOL] [EOL] def test_bake_not_open_source ( cookies ) : [EOL] with bake_in_temp_dir ( cookies , extra_context = { [string] : [string] } ) as result : [EOL] found_toplevel_files = [ f . basename for f in result . project . listdir ( ) ] [EOL] assert [string] in found_toplevel_files [EOL] assert [string] not in found_toplevel_files [EOL] assert [string] not in result . project . join ( [string] ) . read ( ) [EOL] [EOL] [EOL] def test_not_using_pytest ( cookies ) : [EOL] with bake_in_temp_dir ( cookies ) as result : [EOL] assert result . project . isdir ( ) [EOL] test_file_path = result . project . join ( [string] ) [EOL] lines = test_file_path . readlines ( ) [EOL] assert [string] in [string] . join ( lines ) [EOL] assert [string] in [string] . join ( lines ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0