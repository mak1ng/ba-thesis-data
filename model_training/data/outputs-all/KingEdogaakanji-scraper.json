from unittest import mock [EOL] [EOL] import unittest [EOL] [EOL] import scraper [EOL] [EOL] [EOL] class EdgarsFirstTest ( unittest . TestCase ) : [EOL] def test_parses_kanjipedia_EI ( self ) : [EOL] output = scraper . main ( ) [EOL] print ( output ) [EOL] [comment] [EOL] [comment] [EOL] self . assertIn ( [string] , output ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0
[comment] [EOL] from typing import Any [EOL] import typing [EOL] import requests [EOL] import builtins [EOL] import logging [EOL] import lxml [EOL] import logging [EOL] from typing import Any [EOL] import requests [EOL] import lxml . html [EOL] [EOL] logger = logging . getLogger ( __name__ ) [EOL] [EOL] [EOL] def get_my_section ( html ) : [EOL] [docstring] [EOL] tree = lxml . html . fromstring ( html ) [EOL] [comment] [EOL] return tree . find_class ( [string] ) [ [number] ] [EOL] [EOL] [EOL] def main ( ) : [EOL] [docstring] [EOL] req = requests . get ( [string] ) [EOL] req . raise_for_status ( ) [EOL] html = req . text [EOL] [comment] [EOL] parsed = get_my_section ( html ) . text_content ( ) [EOL] logger . info ( parsed ) [EOL] return parsed [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] logging . basicConfig ( level = logging . DEBUG ) [EOL] main ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 $lxml.html.HtmlElement$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0