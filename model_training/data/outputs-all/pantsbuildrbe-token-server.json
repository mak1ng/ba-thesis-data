import flask [EOL] import src . server [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] app = src . server . app [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $flask.app.Flask$ 0 0 0 0 0 $flask.app.Flask$ 0
	0
import builtins [EOL] import src [EOL] import flask [EOL] from __future__ import annotations [EOL] [EOL] import flask [EOL] [EOL] from src import token_generator [EOL] from src . datastore import JobAttempt [EOL] from src . travis import TravisJob [EOL] [EOL] app = flask . Flask ( __name__ ) [EOL] [EOL] [EOL] @ app . route ( [string] ) def index ( ) : [EOL] return [string] [EOL] [EOL] [EOL] @ app . route ( [string] , methods = [ [string] ] ) def generate_token ( ) : [EOL] travis_job = TravisJob . get_from_api ( job_id = int ( flask . request . get_json ( ) [ [string] ] ) ) [EOL] if not travis_job . is_valid ( ) : [EOL] flask . abort ( [number] ) [EOL] job_attempt = JobAttempt ( travis_job_id = travis_job . id_ , started_at = travis_job . started_at ) [EOL] if job_attempt . already_used ( ) : [EOL] flask . abort ( [number] ) [EOL] job_attempt . save_to_db ( ) [EOL] return token_generator . generate ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $flask.app.Flask$ 0 0 0 0 0 0 0 0 0 0 0 $flask.app.Flask$ 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 $flask.app.Flask$ 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import List , Any [EOL] import typing [EOL] import builtins [EOL] from __future__ import annotations [EOL] [EOL] from google . cloud import iam_credentials_v1 [EOL] [EOL] credentials_client = iam_credentials_v1 . IAMCredentialsClient ( ) [EOL] [EOL] [comment] [EOL] [comment] [EOL] resource_name = credentials_client . service_account_path ( project = [string] , service_account = [string] ) [EOL] [EOL] [comment] [EOL] [comment] [EOL] scope = [ [string] ] [EOL] [EOL] [EOL] def generate ( ) : [EOL] access_token = credentials_client . generate_access_token ( name = resource_name , scope = scope ) . access_token [EOL] return access_token [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 $typing.List[builtins.str]$ 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0