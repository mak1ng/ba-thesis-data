from typing import Any , List [EOL] import typing [EOL] import queue [EOL] import logging [EOL] [docstring] [EOL] [EOL] import logging [EOL] [EOL] try : [EOL] from queue import Queue , Empty [EOL] except ImportError : [EOL] from Queue import Queue , Empty [comment] [EOL] from zeroconf import Zeroconf , ServiceBrowser [EOL] from libsoundtouch . device import SoundTouchDevice [EOL] from libsoundtouch . utils import SoundtouchDeviceListener [EOL] [EOL] _LOGGER = logging . getLogger ( __name__ ) [EOL] [EOL] [EOL] def soundtouch_device ( host , port = [number] ) : [EOL] [docstring] [EOL] s_device = SoundTouchDevice ( host , port ) [EOL] return s_device [EOL] [EOL] [EOL] def discover_devices ( timeout = [number] ) : [EOL] [docstring] [EOL] devices = [ ] [EOL] [comment] [EOL] add_devices_queue = Queue ( ) [EOL] [EOL] def add_device_function ( name , host , port ) : [EOL] [docstring] [EOL] _LOGGER . info ( [string] , name , host , port ) [EOL] devices . append ( soundtouch_device ( host , port ) ) [EOL] [EOL] zeroconf = Zeroconf ( ) [EOL] listener = SoundtouchDeviceListener ( add_device_function ) [EOL] _LOGGER . debug ( [string] ) [EOL] ServiceBrowser ( zeroconf , [string] , listener ) [EOL] try : [EOL] add_devices_queue . get ( timeout = timeout ) [EOL] except Empty : [EOL] _LOGGER . debug ( [string] ) [EOL] return devices [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0