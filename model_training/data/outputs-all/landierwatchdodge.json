from typing import Any [EOL] import typing [EOL] import data [EOL] import logging [EOL] import api [EOL] from data import ExchangePlatform , Ledger [EOL] from binance . client import Client [EOL] import tornado . ioloop [EOL] import config [EOL] import logging [EOL] import signal [EOL] [EOL] [EOL] PULL_INTERVAL_MS = [number] * [number] [comment] [EOL] JITTER = [number] [EOL] [EOL] logging . basicConfig ( level = [string] ) [EOL] log = logging . getLogger ( __name__ ) [EOL] [EOL] [EOL] class ExchangePuller : [EOL] def __init__ ( self , exchange_platform , ledger ) : [EOL] def exit_handler ( sig , frame ) : [EOL] log . info ( [string] ) [EOL] tornado . ioloop . IOLoop . instance ( ) . add_callback_from_signal ( self . stop ) [EOL] [EOL] signal . signal ( signal . SIGTERM , exit_handler ) [EOL] signal . signal ( signal . SIGINT , exit_handler ) [EOL] [EOL] self . ledger = ledger [EOL] self . conf = exchange_platform [EOL] self . client = Client ( exchange_platform . api_key , exchange_platform . secret_key ) [EOL] [EOL] def run ( self ) : [EOL] log . info ( [string] ) [EOL] [EOL] def schedule_func ( ) : [EOL] balances = self . client . get_account ( ) [EOL] [comment] [EOL] [comment] [EOL] log . debug ( balances ) [EOL] log . info ( [string] ) [EOL] [EOL] [comment] [EOL] self . main_loop = tornado . ioloop . IOLoop . current ( ) [EOL] self . sched = tornado . ioloop . PeriodicCallback ( schedule_func , PULL_INTERVAL_MS , JITTER ) [EOL] [comment] [EOL] self . sched . start ( ) [EOL] [comment] [EOL] self . main_loop . start ( ) [EOL] [EOL] async def stop ( self ) : [EOL] log . info ( [string] ) [EOL] self . sched . stop ( ) [EOL] self . main_loop . stop ( ) [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] ledger = Ledger ( ) [EOL] binance_conf = ExchangePlatform ( name = [string] , api_key = config . API_KEY , secret_key = config . SECRET_KEY ) [EOL] exchange_puller = ExchangePuller ( binance_conf , ledger ) [EOL] exchange_puller . run ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 0 0 0 $builtins.float$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $data.ExchangePlatform$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $data.ExchangePlatform$ 0 0 0 0 0 0 0 $data.ExchangePlatform$ 0 0 0 $data.ExchangePlatform$ 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 $typing.Any$ 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 $builtins.float$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $logging.Logger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $api.exchange_puller.ExchangePuller$ 0 0 0 $typing.Any$ 0 $typing.Any$ 0 0 $api.exchange_puller.ExchangePuller$ 0 0 0 0 0
	0
import os [EOL] [EOL] [EOL] API_KEY = os . environ . get ( [string] , [string] ) [EOL] SECRET_KEY = os . environ . get ( [string] , [string] ) [EOL]	0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any , List , Tuple , Type , Union [EOL] import typing [EOL] import api [EOL] from tornado . web import Application , RequestHandler [EOL] from tornado . ioloop import IOLoop [EOL] import json [EOL] [EOL] from tornado . options import define , options [EOL] [EOL] define ( [string] , default = [number] , help = [string] , type = int ) [EOL] [EOL] items = [ ] [EOL] [EOL] class TodoItems ( RequestHandler ) : [EOL] def get ( self ) : [EOL] self . write ( { [string] : items } ) [EOL] [EOL] [EOL] class TodoItem ( RequestHandler ) : [EOL] def post ( self , _ ) : [EOL] items . append ( json . loads ( self . request . body ) ) [EOL] self . write ( { [string] : [string] } ) [EOL] [EOL] def delete ( self , id ) : [EOL] global items [EOL] new_items = [ item for item in items if item [ [string] ] is not int ( id ) ] [EOL] items = new_items [EOL] self . write ( { [string] : [string] % id } ) [EOL] [EOL] [EOL] def make_app ( ) : [EOL] urls = [ ( [string] , TodoItems ) , ( [string] , TodoItem ) ] [EOL] return Application ( urls , debug = True ) [EOL] [EOL] if __name__ == [string] : [EOL] app = make_app ( ) [EOL] app . listen ( options . port ) [EOL] IOLoop . instance ( ) . start ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
import decimal [EOL] import api [EOL] import builtins [EOL] from dataclasses import dataclass [EOL] from decimal import Decimal [EOL] import arrow [EOL] [EOL] @ dataclass class Transaction : [EOL] transaction_id = ... [EOL] amount = ... [EOL] currency = ... [EOL] [EOL] [EOL] @ dataclass class Balance : [EOL] timestamp = ... [EOL] amount = ... [EOL] currency = ... [EOL] [EOL] [EOL] @ dataclass class ExchangePlatform : [EOL] name = ... [EOL] api_key = ... [EOL] secret_key = ... [EOL] [EOL] [EOL] class DataStore ( dict ) : [EOL] def add ( self , key , value ) : [EOL] self [ key ] = value [EOL] [EOL] def list ( self ) : [EOL] return list ( self . items ( ) ) [EOL] [EOL] [EOL] class Ledger : [EOL] def __init__ ( self , currency ) : [EOL] self . currency = currency [EOL] self . history = { } [EOL] self . last_balance = None [EOL] [EOL] def __repr__ ( self ) : [EOL] return repr ( self . history ) [EOL] [EOL] def add_balance ( self , timestamp , amount ) : [EOL] self . history [ timestamp ] = amount [EOL] [EOL] def get_balance_at ( self , timestamp ) : [EOL] for key in sorted ( self . history . keys ( ) , reverse = True ) : [EOL] if key > timestamp : [EOL] continue [EOL] if key < timestamp : [EOL] return self . history [ key ] [EOL] [EOL] def get_current_balance ( self ) : [EOL] try : [EOL] return self . history [ max ( self . history . keys ( ) ) ] [EOL] except ValueError : [EOL] return None [EOL] [EOL] [EOL] class GeneralLedger : [EOL] def __init__ ( self ) : [EOL] pass [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] [comment] [EOL] btc_ledger = Ledger ( [string] ) [EOL] [EOL] [comment] [EOL] btc_ledger . add_balance ( [string] , Decimal ( [number] ) ) [EOL] btc_ledger . add_balance ( [string] , Decimal ( [number] ) ) [EOL] btc_ledger . add_balance ( [string] , Decimal ( [number] ) ) [EOL] btc_ledger . add_balance ( [string] , Decimal ( [number] ) ) [EOL] [EOL] [comment] [EOL] print ( btc_ledger ) [EOL] assert btc_ledger . get_current_balance ( ) == Decimal ( [number] ) [EOL] assert btc_ledger . get_balance_at ( [string] ) == Decimal ( [number] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $decimal.Decimal$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 $builtins.int$ 0 0 0 $decimal.Decimal$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 $decimal.Decimal$ 0 0 0 0 0 0 0 $builtins.str$ 0 0 $decimal.Decimal$ 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $api.data.Ledger$ 0 0 0 0 0 0 0 0 0 $api.data.Ledger$ 0 0 0 0 0 0 0 0 0 0 0 $api.data.Ledger$ 0 0 0 0 0 0 0 0 0 0 0 $api.data.Ledger$ 0 0 0 0 0 0 0 0 0 0 0 $api.data.Ledger$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $api.data.Ledger$ 0 0 0 $api.data.Ledger$ 0 0 0 0 0 0 0 0 0 0 0 $api.data.Ledger$ 0 0 0 0 0 0 0 0 0 0 0