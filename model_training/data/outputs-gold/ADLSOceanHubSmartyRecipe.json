import logging [EOL] [EOL] logging . basicConfig ( level = logging . INFO ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Union , Any , Dict , List [EOL] import builtins [EOL] import typing [EOL] [docstring] [EOL] [EOL] import os [EOL] from typing import List [EOL] [EOL] [comment] [EOL] BASE_DIR = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ) ) ) [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] SECRET_KEY = [string] [EOL] [EOL] [comment] [EOL] DEBUG = True [EOL] [EOL] ALLOWED_HOSTS = [ ] [EOL] [EOL] [EOL] [comment] [EOL] [EOL] DJANGO_APPS = [ [string] , [string] , [string] , [string] , [string] , [string] , ] [EOL] [EOL] LOCAL_APPS = [ [string] , [string] ] [EOL] [EOL] THIRD_PARTY_APPS = [ [string] ] [EOL] [EOL] INSTALLED_APPS = DJANGO_APPS + LOCAL_APPS + THIRD_PARTY_APPS [EOL] [EOL] MIDDLEWARE = [ [string] , [string] , [string] , [string] , [string] , [string] , [string] , ] [EOL] [EOL] ROOT_URLCONF = [string] [EOL] [EOL] TEMPLATES = [ { [string] : [string] , [string] : [ ] , [string] : True , [string] : { [string] : [ [string] , [string] , [string] , [string] , ] , } , } , ] [EOL] [EOL] WSGI_APPLICATION = [string] [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] DATABASES = { [string] : { [string] : [string] , [string] : os . environ . get ( [string] ) , [string] : os . environ . get ( [string] ) , [string] : os . environ . get ( [string] ) , [string] : [number] } } [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] AUTH_PASSWORD_VALIDATORS = [ { [string] : [string] [string] , } , { [string] : [string] [string] , } , { [string] : [string] [string] , } , { [string] : [string] [string] , } , ] [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] LANGUAGE_CODE = [string] [EOL] [EOL] TIME_ZONE = [string] [EOL] [EOL] USE_I18N = True [EOL] [EOL] USE_L10N = True [EOL] [EOL] USE_TZ = True [EOL] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [EOL] STATIC_URL = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 $builtins.bool$ 0 0 0 0 $typing.List[builtins.int]$ 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 $typing.List[builtins.str]$ 0 $typing.List[builtins.str]$ 0 $typing.List[builtins.str]$ 0 $typing.List[builtins.str]$ 0 0 $typing.List[builtins.str]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 $typing.List[typing.Dict[builtins.str,typing.Union[typing.Dict[builtins.str,typing.List[builtins.str]],typing.List[typing.Any],builtins.bool,builtins.str]]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 0 0 0 0 0 0 $typing.Dict[builtins.str,typing.Dict[builtins.str,typing.Union[None,builtins.int,builtins.str]]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Dict[builtins.str,builtins.str]]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0 0 $builtins.str$ 0 0 0 0 $builtins.bool$ 0 0 0 0 $builtins.bool$ 0 0 0 0 $builtins.bool$ 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
	0
from typing import Any , List [EOL] import typing [EOL] [docstring] [EOL] import apps . home . urls [EOL] import apps . recipes . urls [EOL] [EOL] from django . conf . urls import include [EOL] from django . contrib import admin [EOL] from django . urls import path [EOL] [EOL] urlpatterns = [ path ( [string] , admin . site . urls ) , path ( [string] , include ( apps . home . urls ) ) , path ( [string] , include ( apps . recipes . urls ) ) ] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Any [EOL] import typing [EOL] [docstring] [EOL] [EOL] import os [EOL] [EOL] from django . core . wsgi import get_wsgi_application [EOL] [EOL] os . environ . setdefault ( [string] , [string] ) [EOL] [EOL] application = get_wsgi_application ( ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0
	0
from typing import Any , List [EOL] import typing [EOL] from apps . recipes . views import ( recipe_detail , recipe_list ) [EOL] [EOL] from django . urls import path [EOL] [EOL] urlpatterns = [ path ( [string] , recipe_list , name = [string] ) , path ( [string] , recipe_detail , name = [string] ) , ] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import Type [EOL] import typing [EOL] import backend [EOL] from django . db import models [EOL] [EOL] [EOL] [comment] [EOL] class Recipe ( models . Model ) : [EOL] recipeid = models . AutoField ( primary_key = True ) [EOL] name = models . CharField ( max_length = [number] ) [EOL] description = models . CharField ( max_length = [number] ) [EOL] [EOL] def __str__ ( self ) : [EOL] return f'{ self . recipeid } [string] { self . name }' [EOL] [EOL] [EOL] class Ingredient ( models . Model ) : [EOL] ingredientid = models . AutoField ( primary_key = True ) [EOL] name = models . CharField ( max_length = [number] ) [EOL] description = models . CharField ( max_length = [number] ) [EOL] [EOL] def __str__ ( self ) : [EOL] return f' [string] { self . ingredientid } [string] { self . name } [string] ' [EOL] [EOL] [EOL] class Measure ( models . Model ) : [EOL] measureid = models . AutoField ( primary_key = True ) [EOL] name = models . CharField ( max_length = [number] ) [EOL] description = models . CharField ( max_length = [number] ) [EOL] short_name = models . CharField ( max_length = [number] ) [EOL] [EOL] def __str__ ( self ) : [EOL] return f' [string] { self . measureid } [string] { self . name } [string] ' [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Recipe]$ 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Recipe]$ 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Recipe]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Ingredient]$ 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Ingredient]$ 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Ingredient]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Measure]$ 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Measure]$ 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Measure]$ 0 0 0 0 0 0 0 0 0 0 $typing.Type[backend.server.apps.recipes.models.Measure]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
	0
from typing import Any [EOL] import typing [EOL] from apps . recipes . models import Recipe [EOL] from apps . recipes . serializers import RecipeSerializer [EOL] [EOL] from django . test import TestCase [EOL] [EOL] [EOL] class RecipeTestCase ( TestCase ) : [EOL] def setUp ( self ) : [EOL] Recipe . objects . create ( name = [string] , description = [string] ) [EOL] Recipe . objects . create ( name = [string] , description = [string] ) [EOL] [EOL] def test_recipe_serialization_get ( self ) : [EOL] recipe1 = Recipe . objects . get ( name = [string] ) [EOL] recipe2 = Recipe . objects . get ( name = [string] ) [EOL] serializer1 = RecipeSerializer ( recipe1 ) [EOL] serializer2 = RecipeSerializer ( recipe2 ) [EOL] self . assertEqual ( serializer1 . data [ [string] ] , [string] ) [EOL] self . assertEqual ( serializer2 . data [ [string] ] , [string] ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 $typing.Any$ 0 0 0 $typing.Any$ 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.Any$ 0 0 0 0 0 0 0 0 0
from django . apps import AppConfig [EOL] [EOL] [EOL] class RecipesConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
	0
from django . apps import AppConfig [EOL] [EOL] [EOL] class HomeConfig ( AppConfig ) : [EOL] name = [string] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $builtins.str$ 0 0 0
	0
[comment] [EOL]	0 0
from typing import Dict , Any [EOL] import typing [EOL] from django . shortcuts import render [EOL] [EOL] [EOL] [comment] [EOL] def index ( request ) : [EOL] context = { } [EOL] return render ( request , [string] , context ) [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL]	0 0
from typing import Any , List [EOL] import typing [EOL] from apps . home . views import index [EOL] [EOL] from django . urls import path [EOL] [EOL] urlpatterns = [ path ( [string] , index , name = [string] ) ] [EOL]	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 $typing.List[typing.Any]$ 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[comment] [EOL]	0 0
	0