from setuptools import setup [EOL] [EOL] setup ( name = [string] , version = [string] , description = [string] , author = [string] , author_email = [string] , url = [string] , packages = [ [string] ] , )	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from typing import List , Any [EOL] import queue [EOL] import typing [EOL] import os [EOL] import threading [EOL] import queue [EOL] import subprocess [EOL] import json [EOL] [EOL] def ffprobe ( file ) : [EOL] [docstring] [EOL] meta = subprocess . check_output ( [ [string] , [string] , [string] , [string] , [string] , [string] , [string] , str ( file ) ] , text = True ) [EOL] return json . loads ( meta ) [EOL] [EOL] [EOL] def convert_video ( file , out720 , out480 ) : [EOL] [EOL] [comment] [EOL] print ( [string] + file + [string] ) [EOL] try : [EOL] subprocess . call ( [ [string] , [string] , file , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , out720 ] ) [EOL] print ( [string] + file + [string] ) [EOL] except Exception as e : [EOL] print ( e ) [EOL] [EOL] [comment] [EOL] print ( [string] + file + [string] ) [EOL] [EOL] try : [EOL] subprocess . call ( [ [string] , [string] , file , [string] , [string] , [string] , [string] , [string] , [string] , [string] , [string] , out480 ] ) [EOL] print ( [string] + file + [string] ) [EOL] except Exception as e : [EOL] print ( e ) [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] [EOL] def ffmpeg ( ) : [EOL] q = queue . Queue ( ) [EOL] thread_list = [ ] [EOL] t = [number] [EOL] [EOL] [docstring] [EOL] try : [EOL] for file in os . listdir ( [string] ) : [EOL] tmp = file . split ( [string] ) [EOL] if tmp [ - [number] ] == [string] : [EOL] out720 = tmp [ [number] ] + [string] + tmp [ - [number] ] [EOL] out480 = tmp [ [number] ] + [string] + tmp [ - [number] ] [EOL] [EOL] [comment] [EOL] q . put ( file ) [EOL] thread_list . append ( threading . Thread ( target = convert_video , args = ( file , out720 , out480 ) ) ) [EOL] [EOL] t = t + [number] [EOL] [EOL] except Exception as e : [EOL] print ( e ) [EOL] [EOL] print ( str ( t ) + [string] ) [EOL] [EOL] for thread in thread_list : [EOL] thread . start ( ) [EOL] [EOL] [EOL] [comment] [EOL] [EOL] [EOL] if __name__ == [string] : [EOL] ffmpeg ( )	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
from pytest import approx [EOL] import main [EOL] [EOL] [EOL] def test_duration ( ) : [EOL] [EOL] [comment] [EOL] fnin = [string] [EOL] [EOL] fnout_480 = [string] [EOL] [EOL] fnout_720 = [string] [EOL] [EOL] main . convert_video ( fnin , fnout_720 , fnout_480 ) [EOL] [EOL] [EOL] [comment] [EOL] info_in1 = main . ffprobe ( fnin ) [EOL] [EOL] info_out_4801 = main . ffprobe ( fnout_480 ) [EOL] [EOL] info_out_7201 = main . ffprobe ( fnout_720 ) [EOL] [EOL] [EOL] [comment] [EOL] info_in = float ( info_in1 [ [string] ] [ [number] ] [ [string] ] ) [EOL] [EOL] info_out_480 = float ( info_out_4801 [ [string] ] [ [number] ] [ [string] ] ) [EOL] [EOL] info_out_720 = float ( info_out_7201 [ [string] ] [ [number] ] [ [string] ] ) [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [comment] [EOL] [EOL] assert info_in == approx ( info_out_480 ) [EOL] assert info_in == approx ( info_out_720 ) [EOL] [EOL] if __name__ == [string] : [EOL] test_duration ( )	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0